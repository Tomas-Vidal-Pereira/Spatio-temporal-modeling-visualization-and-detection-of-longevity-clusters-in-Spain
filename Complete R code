####################################
# IMPORT LIBRARIES AND LOAD THE DATA
####################################

library(readxl)
library(VIM)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(mapSpain)
library(GGally)
library(forcats)
library(tidyr)

data.12 <- read_excel ("habsxcp-2012.xlsx")
data.14 <- read_excel ("habsxcp-2014.xlsx")
data.16 <- read_excel ("habsxcp-2016.xlsx")
data.18 <- read_excel ("habsxcp-2018.xlsx")
data.20 <- read_excel ("habsxcp-2020.xlsx")
data.22 <- read_excel ("habsxcp-2022.xlsx")

################################################
# DATA PROCESSING AND EXPLORATORY DATA ANALYSIS
################################################

chr_vars <- c("idcp", "CCAA", "PROV", "COMARCA", "MUNICIPIO", "COD_INE", "COD_POSTAL")
data.12[chr_vars] <- lapply(data.12[chr_vars], factor)
data.14[chr_vars] <- lapply(data.14[chr_vars], factor)
data.16[chr_vars] <- lapply(data.16[chr_vars], factor)
data.18[chr_vars] <- lapply(data.18[chr_vars], factor)
data.20[chr_vars] <- lapply(data.20[chr_vars], factor)
data.22[chr_vars] <- lapply(data.22[chr_vars], factor)

# Convert all numeric columns except Coord_X_ce, Coord_Y_ce to integers by rounding
excluded_columns <- c("Coord_X_ce","Coord_Y_ce")
data.12 <- data.12 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))
data.14 <- data.14 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))
data.16 <- data.16 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))
data.18 <- data.18 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))
data.20 <- data.20 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))
data.22 <- data.22 %>%
  mutate(across(where(is.numeric) & !all_of(excluded_columns), ~ round(.)))

# Create a vector where every year appears as many observations the corresponding data set has
year <- as.factor(c(rep(2012,nrow(data.12)), rep(2014,nrow(data.14)), rep(2016,nrow(data.16)),
          rep(2018,nrow(data.18)), rep(2020,nrow(data.20)), rep(2022,nrow(data.22))))
# Concatenate the data sets
data <- rbind(data.12, data.14, data.16, data.18, data.20, data.22)
# Add the variable year
data <- cbind(data, year)

mice_plot <- aggr(data, col=c('navyblue','yellow'),numbers=TRUE, sortVars=TRUE,labels=names(data), cex.axis=.7,gap=3,ylab=c("Missing data","Pattern"))

variables_with_missing <- data[, !(names(data) %in% c("idcp", "CCAA","PROV","COMARCA","MUNICIPIO","COD_INE","COD_POSTAL","Coord_X_ce","Coord_Y_ce"))]
# subset the observations with missing values only (except the excluded variables)
subset_with_missing <- subset(data, is.na(variables_with_missing))
print(subset_with_missing)

data <- na.omit(data)
data.18 <- na.omit(data.18)

data.12[data.12$PROV=="Almería","PROV"]="Almeria"
data.12[data.12$PROV=="Rioja","PROV"]="La Rioja"
data.14[data.14$PROV=="Almería","PROV"]="Almeria"
data.14[data.14$PROV=="Rioja","PROV"]="La Rioja"
data.16[data.16$PROV=="Almería","PROV"]="Almeria"
data.16[data.16$PROV=="Rioja","PROV"]="La Rioja"
data.18[data.18$PROV=="Almería","PROV"]="Almeria"
data.18[data.18$PROV=="Rioja","PROV"]="La Rioja"
data.20[data.20$PROV=="Almería","PROV"]="Almeria"
data.20[data.20$PROV=="Rioja","PROV"]="La Rioja"
data.22[data.22$PROV=="Almería","PROV"]="Almeria"
data.22[data.22$PROV=="Rioja","PROV"]="La Rioja"
data[data$PROV=="Almería","PROV"]="Almeria"
data[data$PROV=="Rioja","PROV"]="La Rioja"

# Create 3 new variables: Total>65, Total>85, Total>100
data$Total_65 <- data$m_65_69+data$m_70_74+data$m_75_79+data$m_80_84+
  data$m_85_89+data$m_90_94+data$m_95_99+data$m_100+data$f_65_69+
  data$f_70_74+data$f_75_79+data$f_80_84+data$f_85_89+data$f_90_94+
  data$f_95_99+data$f_100

data$Total_85 <-data$m_85_89+data$m_90_94+data$m_95_99+data$m_100+
  +data$f_85_89+data$f_90_94+data$f_95_99+data$f_100

data$Total_100 <- data$m_100+data$f_100

## MUNICIPALITIES

munics_12 <- esp_get_munic()
munics_12$ine.prov.name <- factor(munics_12$ine.prov.name)
munics_12 <- munics_12 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))


# 2014
munics_14 <- esp_get_munic()
munics_14$ine.prov.name <- factor(munics_14$ine.prov.name)
munics_14 <- munics_14 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))

# 2016
munics_16 <- esp_get_munic()
munics_16$ine.prov.name <- factor(munics_16$ine.prov.name)
munics_16 <- munics_16 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))

# 2018
munics_18 <- esp_get_munic()
munics_18$ine.prov.name <- factor(munics_18$ine.prov.name)
munics_18 <- munics_18 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))

# 2020
munics_20 <- esp_get_munic()
munics_20$ine.prov.name <- factor(munics_20$ine.prov.name)
munics_20 <- munics_20 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))

# 2022
munics_22 <- esp_get_munic()
munics_22$ine.prov.name <- factor(munics_22$ine.prov.name)
munics_22 <- munics_22 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Alava"="Araba/Álava",
                               "Alicante"="Alicante/Alacant",
                               "Almeria"="Almería",
                               "Avila"="Ávila",
                               "Baleares"="Balears, Illes",
                               "Caceres"="Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon"="Castellón/Castelló",
                               "Ciudad-real"="Ciudad Real",
                               "Cordoba"="Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen"="Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon"="León",
                               "Malaga"="Málaga",
                               "La Rioja"="Rioja, La",
                               "Tenerife"="Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"))

# A CORUÑA
replacements_coruna <- c("Baña, A" = "A Baña", 
                         "Capela, A" = "A Capela", 
                         "Coruña, A" = "A Coruña", 
                         "Laracha, A" = "A Laracha", 
                        "Pobra do Caramiñal, A" = "A Pobra do Caramiñal",
                        "Pontes de García Rodríguez, As" = "As Pontes de García Rodríguez", 
                        "Somozas, As" = "As Somozas", 
                        "Pino, O" = "O Pino", 
                        "Oza-Cesuras" = "Oza-Cesuras") 

# LUGO
replacements_lugo <- c(
  "Fonsagrada, A" = "A Fonsagrada",
  "Incio, O" = "O Incio",
  "Pontenova, A" = "A Pontenova",
  "Pastoriza, A" = "A Pastoriza",
  "Pobra do Brollón, A" = "A Pobra do Brollón",
  "Nogais, As" = "As Nogais",
  "Vicedo, O" = "O Vicedo",
  "Valadouro, O" = "O Valadouro",
  "Corgo, O" = "O Corgo",
  "Saviñao, O" = "O Saviñao",
  "Páramo, O" = "O Páramo"
)

# PONTEVEDRA
replacements_pontevedra <- c(
  "Cañiza, A" = "A Cañiza",
  "Covelo" = "Covelo",
  "Corgo, O" = "O Corgo",
  "Estrada, A" = "A Estrada",
  "Guarda, A" = "A Guarda",
  "Lama, A" = "A Lama",
  "Neves, As" = "As Neves",
  "Porriño, O" = "O Porriño",
  "Grove, O" = "O Grove",
  "Rosal, O" = "O Rosal",
  "Illa de Arousa, A" = "A Illa de Arousa"
)

# OURENSE
replacements_ourense <- c(
  "Arnoia, A" = "A Arnoia",
  "Barco de Valdeorras, O" = "O Barco de Valdeorras",
  "Blancos, Os" = "Os Blancos",
  "Bola, A" = "A Bola",
  "Bolo, O" = "O Bolo",
  "Carballiño, O" = "O Carballiño",
  "Gudiña, A" = "A Gudiña",
  "Irixo, O" = "O Irixo",
  "Merca, A" = "A Merca",
  "Mezquita, A" = "A Mezquita",
  "Peroxa, A" = "A Peroxa",
  "Pobra de Trives, A" = "A Pobra de Trives",
  "Pereiro de Aguiar, O" = "O Pereiro de Aguiar",
  "Rúa, A" = "A Rúa",
  "Teixeira, A" = "A Teixeira",
  "Veiga, A" = "A Veiga"
)

# ASTURIAS
replacements_asturias <- c(
  "Tineo" = "Tinéu",
  "Illano" = "Eilao",
  "Tapia de Casariego" = "Tapia",
  "Franco, El" = "El Franco",
  "Coaña" = "Cuaña",
  "San Tirso de Abres" = "San Tiso D'Abres",
  "Candamo" = "Candamo/Candamu",
  "Soto del Barco" = "Sotu'l Barcu",
  "Peñamellera Alta" = "El Valle Altu de Peñamellera",
  "Regueras, Las" = "Les Regueres"
)

# CANTABRIA
replacements_cantabria <- c(
  "Astillero, El" = "El Astillero",
  "Corrales de Buelna, Los" = "Los Corrales de Buelna",
  "Rozas de Valdearroyo, Las" = "Las Rozas de Valdearroyo",
  "Tojos, Los" = "Los Tojos"
)

# BIZKAIA
replacements_bizkaia <- c(
  "Karrantza Harana / Valle de Carranza" = "Karrantza Harana/Valle de Carranza",
  "Urduña / Orduña" = "Urduña/Orduña",
  "Ziortza-Bolibar" = "Ziortza-Bolibar"
)

# GIPUZKOA
replacements_gipuzkoa <- c(
  "Arrasate / Mondragón" = "Arrasate/Mondragón",
  "Astigarraga" = "Astigarraga",
  "Baliarrain" = "Baliarrain",
  "Donostia / San Sebastián" = "Donostia/San Sebastián",
  "Lasarte-Oria" = "Lasarte-Oria"
)

# ALAVA
replacements_alava <- c(
  "Ribera Baja / Erribera Beitia" = "Erriberabeitia",
  "Agurain / Salvatierra" = "Agurain/Salvatierra",
  "Ayala / Aiara" = "Ayala/Aiara",
  "Baños de Ebro / Mañueta" = "Baños de Ebro/Mañueta",
  "Campezo / Kanpezu" = "Campezo/Kanpezu",
  "Elburgo / Burgelu" = "Elburgo/Burgelu",
  "Elvillar/Bilar" = "Elvillar/Bilar",
  "Erriberagoitia / Ribera Alta" = "Erriberagoitia/Ribera Alta",
  "Harana / Valle de Arana" = "Harana/Valle de Arana",
  "Iruña Oka / Iruña de Oca" = "Iruña Oka/Iruña de Oca",
  "Labastida / Bastida" = "Labastida/Bastida",
  "Lanciego / Lantziego" = "Lanciego/Lantziego",
  "Laudio / Llodio" = "Laudio/Llodio",
  "Moreda de Álava / Moreda Araba" = "Moreda de Álava/Moreda Araba",
  "San Millán / Donemiliaga" = "San Millán/Donemiliaga",
  "Valdegovía / Gaubea" = "Valdegovía/Gaubea",
  "Villabuena de Álava / Eskuernaga" = "Villabuena de Álava/Eskuernaga",
  "Yécora / Iekora" = "Yécora/Iekora",
  "Elvillar / Bilar" = "Elvillar/Bilar"
)

# NAVARRA
replacements_navarra <- c(
  "Abárzuza / Abartzuza" = "Abárzuza/Abartzuza",
  "Abaurregaina / Abaurrea Alta" = "Abaurregaina/Abaurrea Alta",
  "Abaurrepea / Abaurrea Baja" = "Abaurrepea/Abaurrea Baja",
  "Aibar / Oibar" = "Aibar/Oibar",
  "Allín / Allin" = "Allín/Allin",
  "Altsasu / Alsasua" = "Altsasu/Alsasua",
  "Ancín / Antzin" = "Ancín/Antzin",
  "Ansoáin / Antsoain" = "Ansoáin/Antsoain",
  "Aoiz / Agoitz" = "Aoiz/Agoitz",
  "Aranarache / Aranaratxe" = "Aranarache/Aranaratxe",
  "Arce / Artzi" = "Arce/Artzi",
  "Atez / Atetz" = "Atez/Atetz",
  "Auritz / Burguete" = "Auritz/Burguete",
  "Ayegui / Aiegi" = "Ayegui/Aiegi",
  "Barañáin / Barañain" = "Barañáin/Barañain",
  "Berrioplano / Berriobeiti" = "Berrioplano/Berriobeiti",
  "Burgui / Burgi" = "Burgui/Burgi",
  "Burlada / Burlata" = "Burlada/Burlata",
  "Cendea de Olza / Oltza Zendea" = "Cendea de Olza/Oltza Zendea",
  "Cirauqui / Zirauki" = "Cirauqui/Zirauki",
  "Ciriza / Ziritza" = "Ciriza/Ziritza",
  "Doneztebe / Santesteban" = "Doneztebe/Santesteban",
  "Echarri / Etxarri" = "Echarri/Etxarri",
  "Enériz / Eneritz" = "Enériz/Eneritz",
  "Esparza de Salazar / Espartza Zaraitzu" = "Esparza de Salazar/Espartza Zaraitzu",
  "Ezcároz / Ezkaroze" = "Ezcároz/Ezkaroze",
  "Gallipienzo / Galipentzu" = "Gallipienzo/Galipentzu",
  "Gallués / Galoze" = "Gallués/Galoze",
  "Güesa / Gorza" = "Güesa/Gorza",
  "Guesálaz / Gesalatz" = "Guesálaz/Gesalatz",
  "Hiriberri / Villanueva de Aezkoa" = "Hiriberri/Villanueva de Aezkoa",
  "Huarte / Uharte" = "Huarte/Uharte",
  "Isaba / Izaba" = "Isaba/Izaba",
  "Iza / Itza" = "Iza/Itza",
  "Izalzu / Itzaltzu" = "Izalzu/Itzaltzu",
  "Leache / Leatxe" = "Leache/Leatxe",
  "Leoz / Leotz" = "Leoz/Leotz",
  "Lónguida / Longida" = "Lónguida/Longida",
  "Luzaide / Valcarlos" = "Luzaide/Valcarlos",
  "Monreal / Elo" = "Monreal/Elo",
  "Navascués / Nabaskoze" = "Navascués/Nabaskoze",
  "Noáin (Valle de Elorz) / Noain (Elortzibar)" = "Noáin (Valle de Elorz)/Noain (Elortzibar)",
  "Ochagavía / Otsagabia" = "Ochagavía/Otsagabia",
  "Olazti / Olazagutía" = "Olazti/Olazagutía",
  "Olite / Erriberri" = "Olite/Erriberri",
  "Olóriz / Oloritz" = "Olóriz/Oloritz",
  "Oronz / Orontze" = "Oronz/Orontze",
  "Oroz-Betelu / Orotz-Betelu" = "Oroz-Betelu/Orotz-Betelu",
  "Orreaga / Roncesvalles" = "Orreaga/Roncesvalles",
  "Pamplona / Iruña" = "Pamplona/Iruña",
  "Peralta / Azkoien" = "Peralta/Azkoien",
  "Puente la Reina / Gares" = "Puente la Reina/Gares",
  "Roncal / Erronkari" = "Roncal/Erronkari",
  "Salinas de Oro / Jaitz" = "Salinas de Oro/Jaitz",
  "Sangüesa / Zangoza" = "Sangüesa/Zangoza",
  "Sarriés / Sartze" = "Sarriés/Sartze",
  "Ujué / Uxue" = "Ujué/Uxue",
  "Unzué / Untzue" = "Unzué/Untzue",
  "Urdazubi / Urdax" = "Urdazubi/Urdax",
  "Urzainqui / Urzainki" = "Urzainqui/Urzainki",
  "Uztárroz / Uztarroze" = "Uztárroz/Uztarroze",
  "Valle de Egüés / Eguesibar" = "Valle de Egüés/Eguesibar",
  "Valle de Ollo / Ollaran" = "Valle de Ollo/Ollaran",
  "Valle de Yerri / Deierri" = "Valle de Yerri/Deierri",
  "Vidángoz / Bidankoze" = "Vidángoz/Bidankoze",
  "Villava / Atarrabia" = "Villava/Atarrabia",
  "Zabalza / Zabaltza" = "Zabalza/Zabaltza",
  "Zizur Mayor / Zizur Nagusia" = "Zizur Mayor/Zizur Nagusia",
  "Arcos, Los" = "Los Arcos",
  "Busto, El" = "El Busto",
  "Lizoáin-Arriasgoiti" = "Lizoain-Arriasgoiti/Lizoainibar-Arriasgoiti",
  "Pueyo" = "Pueyo/Puiu",
  "Lezáun" = "Lezaun",
  "Mendigorría" = "Mendigorria"
)
delete_navarra <- c(
  "Villamayor de Monjardín"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))
munics_20<- munics_20 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Navarra" & name %in% delete_navarra))

# LA RIOJA
replacements_la_rioja <- c(
  "Lumbreras" = "Lumbreras de Cameros",
  "Redal, El" = "El Redal",
  "Rasillo de Cameros, El" = "El Rasillo de Cameros",
  "Villar de Arnedo, El" = "El Villar de Arnedo"
)

# LEON
replacements_leon <- c(
  "Antigua, La" = "La Antigua",
  "Bañeza, La" = "La Bañeza",
  "Barrios de Luna, Los" = "Los Barrios de Luna",
  "Burgo Ranero, El" = "El Burgo Ranero",
  "Ercina, La" = "La Ercina",
  "Omañas, Las" = "Las Omañas",
  "Pola de Gordón, La" = "La Pola de Gordón",
  "Robla, La" = "La Robla",
  "Vecilla, La" = "La Vecilla"
)

# PALENCIA
replacements_palencia <- c(
  "Puebla de Valdavia, La"="La Puebla de Valdavia",
  "Vid de Ojeda, La"="La Vid de Ojeda",
  "Serna, La" = "La Serna",
  "Pernía, La" = "La Pernía"
)

# BURGOS
replacements_burgos <- c(
  "Altos, Los" = "Los Altos",
  "Ausines, Los"="Los Ausines",
  "Balbases, Los"="Los Balbases",
  "Barrios de Bureba, Los" = "Los Barrios de Bureba",
  "Gallega, La" = "La Gallega",
  "Hormazas, Las" = "Las Hormazas",
  "Horra, La" = "La Horra",
  "Puebla de Arganzón, La" = "La Puebla de Arganzón",
  "Quintanillas, Las" = "Las Quintanillas",
  "Revilla y Ahedo, La" = "La Revilla y Ahedo",
  "Sequera de Haza, La" = "La Sequera de Haza",
  "Vid y Barrios, La" = "La Vid y Barrios",
  "Vid de Bureba, La" = "La Vid de Bureba",
  "Cueva de Roa, La" = "La Cueva de Roa"
)

# SORIA
replacements_soria <- c(
  "Aldehuelas, Las" = "Las Aldehuelas",
  "Royo, El" = "El Royo",
  "Losilla, La" = "La Losilla",
  "Póveda de Soria, La" = "La Póveda de Soria",
  "Riba de Escalote, La" = "La Riba de Escalote",
  "Rábanos, Los" = "Los Rábanos",
  "Villares de Soria, Los" = "Los Villares de Soria"
)

# ZAMORA
replacements_zamora <- c(
  "Bóveda de Toro, La" = "La Bóveda de Toro",
  "Cubo de Tierra del Vino, El" = "El Cubo de Tierra del Vino",
  "Pego, El" = "El Pego",
  "Perdigón, El" = "El Perdigón",
  "Piñero, El" = "El Piñero",
  "Maderal, El" = "El Maderal",
  "Torre del Valle, La" = "La Torre del Valle",
  "Hiniesta, La" = "La Hiniesta"
)


# VALLADOLID
replacements_valladolid <- c(
  "Campillo, El" = "El Campillo",
  "Mudarra, La" = "La Mudarra",
  "Parrilla, La" = "La Parrilla",
  "Seca, La" = "La Seca",
  "Unión de Campos, La" = "La Unión de Campos",
  "Zarza, La" = "La Zarza",
  "Pedraja de Portillo, La" = "La Pedraja de Portillo"
)

# SEGOVIA
replacements_segovia <- c(
  "Huertos, Los" = "Los Huertos",
  "Espinar, El" = "El Espinar",
  "Matilla, La" = "La Matilla",
  "Losa, La" = "La Losa",
  "Lastrilla, La" = "La Lastrilla"
)
delete_segovia <- c(
  "Pradales" 
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))
munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Segovia" & name %in% delete_segovia))

# SALAMANCA
replacements_salamanca <- c(
  "Alameda de Gardón, La" = "La Alameda de Gardón",
  "Alamedilla, La" = "La Alamedilla",
  "Alberca, La" = "La Alberca",
  "Alberguería de Argañán, La" = "La Alberguería de Argañán",
  "Arco, El" = "El Arco",
  "Atalaya, La" = "La Atalaya",
  "Bastida, La" = "La Bastida",
  "Bodón, El" = "El Bodón",
  "Bouza, La" = "La Bouza",
  "Cabaco, El" = "El Cabaco",
  "Cabeza de Béjar, La" = "La Cabeza de Béjar",
  "Calzada de Béjar, La" = "La Calzada de Béjar",
  "Campo de Peñaranda, El" = "El Campo de Peñaranda",
  "Casas del Conde, Las" = "Las Casas del Conde",
  "Cerro, El" = "El Cerro",
  "Cubo de Don Sancho, El" = "El Cubo de Don Sancho",
  "Encina, La" = "La Encina",
  "Fregeneda, La" = "La Fregeneda",
  "Fuente de San Esteban, La" = "La Fuente de San Esteban",
  "Hoya, La" = "La Hoya",
  "Maíllo, El" = "El Maíllo",
  "Manzano, El" = "El Manzano",
  "Mata de Ledesma, La" = "La Mata de Ledesma",
  "Maya, La" = "La Maya",
  "Milano, El" = "El Milano",
  "Orbada, La" = "La Orbada",
  "Payo, El" = "El Payo",
  "Pedroso de la Armuña, El" = "El Pedroso de la Armuña",
  "Peña, La" = "La Peña",
  "Pino de Tormes, El" = "El Pino de Tormes",
  "Redonda, La" = "La Redonda",
  "Rinconada de la Sierra, La" = "La Rinconada de la Sierra",
  "Sagrada, La" = "La Sagrada",
  "Santos, Los" = "Los Santos",
  "Sahugo, El" = "El Sahugo",
  "Sierpe, La" = "La Sierpe",
  "Tala, La" = "La Tala",
  "Tejado, El" = "El Tejado",
  "Tornadizo, El" = "El Tornadizo",
  "Veguillas, Las" = "Las Veguillas",
  "Vellés, La" = "La Vellés",
  "Vídola, La" = "La Vídola",
  "Zarza de Pumareda, La" = "La Zarza de Pumareda",
  "Ejeme" = "Éjeme"
)

# AVILA
replacements_avila <- c(
  "Adrada, La" = "La Adrada",
  "Aldehuela, La" = "La Aldehuela",
  "Arenal, El" = "El Arenal",
  "Barco de Ávila, El" = "El Barco de Ávila",
  "Barraco, El" = "El Barraco",
  "Berlanas, Las" = "Las Berlanas",
  "Bohodón, El" = "El Bohodón",
  "Carrera, La" = "La Carrera",
  "Colilla, La" = "La Colilla",
  "Fresno, El" = "El Fresno",
  "Hija de Dios, La" = "La Hija de Dios",
  "Horcajada, La" = "La Horcajada",
  "Hornillo, El" = "El Hornillo",
  "Hoyo de Pinares, El" = "El Hoyo de Pinares",
  "Losar del Barco, El" = "El Losar del Barco",
  "Llanos de Tormes, Los" = "Los Llanos de Tormes",
  "Mirón, El" = "El Mirón",
  "Navas del Marqués, Las" = "Las Navas del Marqués",
  "Oso, El" = "El Oso",
  "Parral, El" = "El Parral",
  "Serrada, La" = "La Serrada",
  "Tiemblo, El" = "El Tiemblo",
  "Torre, La" = "La Torre"
)

# HUESCA
replacements_huesca <- c(
  "Fueva, La" = "La Fueva",
  "Grado, El" = "El Grado",
  "Peñas de Riglos, Las" = "Las Peñas de Riglos",
  "Puebla de Castro, La" = "La Puebla de Castro",
  "Pueyo de Araguás, El" = "El Pueyo de Araguás",
  "Sotonera, La" = "La Sotonera"
)
delete_huesca <- c(
  "Vencillón"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))
munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Huesca" & name %in% delete_huesca))

# ZARAGOZA
replacements_zaragoza <- c(
  "Almolda, La" = "La Almolda",
  "Almunia de Doña Godina, La" = "La Almunia de Doña Godina",
  "Burgo de Ebro, El" = "El Burgo de Ebro",
  "Buste, El" = "El Buste",
  "Cuerlas, Las" = "Las Cuerlas",
  "Fayos, Los" = "Los Fayos",
  "Frago, El" = "El Frago",
  "Frasno, El" = "El Frasno",
  "Joyosa, La" = "La Joyosa",
  "Muela, La" = "La Muela",
  "Pedrosas, Las" = "Las Pedrosas",
  "Pintanos, Los" = "Los Pintanos",
  "Puebla de Alfindén, La" = "La Puebla de Alfindén",
  "Vilueña, La" = "La Vilueña",
  "Zaida, La" = "La Zaida",
  "Jarque" = "Jarque de Moncayo"
)

# TERUEL
replacements_teruel <- c(
  "Cañada de Verich, La" = "La Cañada de Verich",
  "Castellar, El" = "El Castellar",
  "Cerollera, La" = "La Cerollera",
  "Codoñera, La" = "La Codoñera",
  "Cuba, La" = "La Cuba",
  "Cuervo, El" = "El Cuervo",
  "Fresneda, La" = "La Fresneda",
  "Ginebrosa, La" = "La Ginebrosa",
  "Hoz de la Vieja, La" = "La Hoz de la Vieja",
  "Iglesuela del Cid, La" = "La Iglesuela del Cid",
  "Mata de los Olmos, La" = "La Mata de los Olmos",
  "Olmos, Los" = "Los Olmos",
  "Parras de Castellote, Las" = "Las Parras de Castellote",
  "Pobo, El" = "El Pobo",
  "Portellada, La" = "La Portellada",
  "Puebla de Híjar, La" = "La Puebla de Híjar",
  "Puebla de Valverde, La" = "La Puebla de Valverde",
  "Vallecillo, El" = "El Vallecillo",
  "Zoma, La" = "La Zoma"
)

# LLEIDA
replacements_lleida <- c(
  "Alamús, Els" = "Els Alamús",
  "Albagés, L'" = "L'Albagés",
  "Albi, L'" = "L'Albi",
  "Pont de Bar, El" = "El Pont de Bar",
  "Sentiu de Sió, La" = "La Sentiu de Sió",
  "Avellanes i Santa Linya, Les" = "Les Avellanes i Santa Linya",
  "Baronia de Rialb, La" = "La Baronia de Rialb",
  "Vall de Boí, La" = "La Vall de Boí",
  "Bòrdes, Es" = "Es Bòrdes",
  "Borges Blanques, Les" = "Les Borges Blanques",
  "Cogul, El" = "El Cogul",
  "Espluga Calba, L'" = "L'Espluga Calba",
  "Floresta, La" = "La Floresta",
  "Fuliola, La" = "La Fuliola",
  "Granadella, La" = "La Granadella",
  "Granja d'Escarp, La" = "La Granja d'Escarp",
  "Molsosa, La" = "La Molsosa",
  "Oluges, Les" = "Les Oluges",
  "Omellons, Els" = "Els Omellons",
  "Omells de na Gaia, Els" = "Els Omells de na Gaia",
  "Palau d'Anglesola, El" = "El Palau d'Anglesola",
  "Coma i la Pedra, La" = "La Coma i la Pedra",
  "Poal, El" = "El Poal",
  "Pobla de Cérvoles, La" = "La Pobla de Cérvoles",
  "Pobla de Segur, La" = "La Pobla de Segur",
  "Pont de Suert, El" = "El Pont de Suert",
  "Portella, La" = "La Portella",
  "Seu d'Urgell, La" = "La Seu d'Urgell",
  "Soleràs, El" = "El Soleràs",
  "Torms, Els" = "Els Torms",
  "Torre de Cabdella, La" = "La Torre de Cabdella",
  "Valls de Valira, Les" = "Les Valls de Valira",
  "Vilosell, El" = "El Vilosell",
  "Guingueta d'Àneu, La" = "La Guingueta d'Àneu",
  "Valls d'Aguilar, Les" = "Les Valls d'Aguilar",
  "Vansa i Fórnols, La" = "La Vansa i Fórnols",
  "Plans de Sió, Els" = "Els Plans de Sió"
)

# GIRONA
replacements_girona <- c(
  "Far d'Empordà, El" = "El Far d'Empordà",
  "Armentera, L'" = "L'Armentera",
  "Vajol, La" = "La Vajol",
  "Bisbal d'Empordà, La" = "La Bisbal d'Empordà",
  "Escala, L'" = "L'Escala",
  "Jonquera, La" = "La Jonquera",
  "Llosses, Les" = "Les Llosses",
  "Pera, La" = "La Pera",
  "Planes d'Hostoles, Les" = "Les Planes d'Hostoles",
  "Preses, Les" = "Les Preses",
  "Port de la Selva, El" = "El Port de la Selva",
  "Saus, Camallera i Llampaies" = "Saus, Camallera i Llampaies", # No change needed
  "Selva de Mar, La" = "La Selva de Mar",
  "Cellera de Ter, La" = "La Cellera de Ter",
  "Tallada d'Empordà, La" = "La Tallada d'Empordà",
  "Vall d'en Bas, La" = "La Vall d'en Bas",
  "Vall de Bianya, La" = "La Vall de Bianya",
  "Brunyola" = "Brunyola i Sant Martí Sapresa",
  "Calonge" = "Calonge i Sant Antoni"
)

# BARCELONA
replacements_barcelona <- c(
  "Ametlla del Vallès, L'" = "L'Ametlla del Vallès",
  "Bruc, El" = "El Bruc",
  "Brull, El" = "El Brull",
  "Cabanyes, Les" = "Les Cabanyes",
  "Espunyola, L'" = "L'Espunyola",
  "Estany, L'" = "L'Estany",
  "Franqueses del Vallès, Les" = "Les Franqueses del Vallès",
  "Garriga, La" = "La Garriga",
  "Granada, La" = "La Granada",
  "Hospitalet de Llobregat, L'" = "L'Hospitalet de Llobregat",
  "Llacuna, La" = "La Llacuna",
  "Llagosta, La" = "La Llagosta",
  "Masies de Roda, Les" = "Les Masies de Roda",
  "Masies de Voltregà, Les" = "Les Masies de Voltregà",
  "Masnou, El" = "El Masnou",
  "Nou de Berguedà, La" = "La Nou de Berguedà",
  "Papiol, El" = "El Papiol",
  "Hostalets de Pierola, Els" = "Els Hostalets de Pierola",
  "Pla del Penedès, El" = "El Pla del Penedès",
  "Pobla de Claramunt, La" = "La Pobla de Claramunt",
  "Pobla de Lillet, La" = "La Pobla de Lillet",
  "Prat de Llobregat, El" = "El Prat de Llobregat",
  "Prats de Rei, Els" = "Els Prats de Rei",
  "Quar, La" = "La Quar",
  "Roca del Vallès, La" = "La Roca del Vallès",
  "Pont de Vilomara i Rocafort, El" = "El Pont de Vilomara i Rocafort",
  "Esquirol, L'" = "L'Esquirol",
  "Torre de Claramunt, La" = "La Torre de Claramunt",
  "Palma de Cervelló, La" = "La Palma de Cervelló",
  "Bigues i Riells" = "Bigues i Riells del Fai"
)

# TARRAGONA
replacements_tarragona <- c(
  "Albiol, L'" = "L'Albiol",
  "Aleixar, L'" = "L'Aleixar",
  "Ametlla de Mar, L'" = "L'Ametlla de Mar",
  "Arboç, L'" = "L'Arboç",
  "Argentera, L'" = "L'Argentera",
  "Bisbal de Falset, La" = "La Bisbal de Falset",
  "Bisbal del Penedès, La" = "La Bisbal del Penedès",
  "Borges del Camp, Les" = "Les Borges del Camp",
  "Catllar, El" = "El Catllar",
  "Sénia, La" = "La Sénia",
  "Espluga de Francolí, L'" = "L'Espluga de Francolí",
  "Fatarella, La" = "La Fatarella",
  "Febró, La" = "La Febró",
  "Figuera, La" = "La Figuera",
  "Galera, La" = "La Galera",
  "Garidells, Els" = "Els Garidells",
  "Guiamets, Els" = "Els Guiamets",
  "Lloar, El" = "El Lloar",
  "Masó, La" = "La Masó",
  "Masroig, El" = "El Masroig",
  "Milà, El" = "El Milà",
  "Molar, El" = "El Molar",
  "Montmell, El" = "El Montmell",
  "Morell, El" = "El Morell",
  "Morera de Montsant, La" = "La Morera de Montsant",
  "Nou de Gaià, La" = "La Nou de Gaià",
  "Palma d'Ebre, La" = "La Palma d'Ebre",
  "Pallaresos, Els" = "Els Pallaresos",
  "Perelló, El" = "El Perelló",
  "Piles, Les" = "Les Piles",
  "Pinell de Brai, El" = "El Pinell de Brai",
  "Pla de Santa Maria, El" = "El Pla de Santa Maria",
  "Pobla de Mafumet, La" = "La Pobla de Mafumet",
  "Pobla de Massaluca, La" = "La Pobla de Massaluca",
  "Pobla de Montornès, La" = "La Pobla de Montornès",
  "Pont d'Armentera, El" = "El Pont d'Armentera",
  "Riba, La" = "La Riba",
  "Riera de Gaià, La" = "La Riera de Gaià",
  "Rourell, El" = "El Rourell",
  "Secuita, La" = "La Secuita",
  "Selva del Camp, La" = "La Selva del Camp",
  "Torre de Fontaubella, La" = "La Torre de Fontaubella",
  "Torre de l'Espanyol, La" = "La Torre de l'Espanyol",
  "Vendrell, El" = "El Vendrell",
  "Vilella Alta, La" = "La Vilella Alta",
  "Vilella Baixa, La" = "La Vilella Baixa",
  "Aldea, L'" = "L'Aldea",
  "Ampolla, L'" = "L'Ampolla",
  "Canonja, La" = "La Canonja"
)

# MADRID
replacements_madrid <- c(
  "Acebeda, La" = "La Acebeda",
  "Álamo, El" = "El Álamo",
  "Atazar, El" = "El Atazar",
  "Berrueco, El" = "El Berrueco",
  "Boalo, El" = "El Boalo",
  "Cabrera, La" = "La Cabrera",
  "Escorial, El" = "El Escorial",
  "Hiruela, La" = "La Hiruela",
  "Molar, El" = "El Molar",
  "Molinos, Los" = "Los Molinos",
  "Rozas de Madrid, Las" = "Las Rozas de Madrid",
  "Santos de la Humosa, Los" = "Los Santos de la Humosa",
  "Serna del Monte, La" = "La Serna del Monte",
  "Vellón, El" = "El Vellón"
)

# CACERES
replacements_caceres <- c(
  "Aldea del Obispo, La" = "La Aldea del Obispo",
  "Cumbre, La" = "La Cumbre",
  "Garganta, La" = "La Garganta",
  "Gordo, El" = "El Gordo",
  "Granja, La" = "La Granja",
  "Pesga, La" = "La Pesga",
  "Torno, El" = "El Torno",
  "Higuera" = "Higuera de Albalat"
)
delete_caceres <- c(
  "Pueblonuevo de Miramontes",
  "Tiétar"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))
munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Caceres" & name %in% delete_caceres))


# BADAJOZ
replacements_badajoz <- c(
  "Albuera, La" = "La Albuera",
  "Carrascalejo, El" = "El Carrascalejo",
  "Codosera, La" = "La Codosera",
  "Coronada, La" = "La Coronada",
  "Garrovilla, La" = "La Garrovilla",
  "Haba, La" = "La Haba",
  "Lapa, La" = "La Lapa",
  "Morera, La" = "La Morera",
  "Nava de Santiago, La" = "La Nava de Santiago",
  "Parra, La" = "La Parra",
  "Roca de la Sierra, La" = "La Roca de la Sierra",
  "Santos de Maimona, Los" = "Los Santos de Maimona",
  "Zarza, La" = "La Zarza",
  "Guadiana del Caudillo" = "Guadiana"
)
delete_badajoz <- c(
  "Reina"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))
munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Badajoz" & name %in% delete_badajoz))


# GUADALAJARA
replacements_guadalajara <- c(
  "Bodera, La" = "La Bodera",
  "Cardoso de la Sierra, El" = "El Cardoso de la Sierra",
  "Casar, El" = "El Casar",
  "Cubillo de Uceda, El" = "El Cubillo de Uceda",
  "Huerce, La" = "La Huerce",
  "Inviernas, Las" = "Las Inviernas",
  "Mierla, La" = "La Mierla",
  "Miñosa, La" = "La Miñosa",
  "Navas de Jadraque, Las" = "Las Navas de Jadraque",
  "Olivar, El" = "El Olivar",
  "Olmeda de Jadraque, La" = "La Olmeda de Jadraque",
  "Ordial, El" = "El Ordial",
  "Pedregal, El" = "El Pedregal",
  "Pobo de Dueñas, El" = "El Pobo de Dueñas",
  "Recuenco, El" = "El Recuenco",
  "Sotillo, El" = "El Sotillo",
  "Toba, La" = "La Toba",
  "Yunta, La" = "La Yunta"
)

# TOLEDO
replacements_toledo <- c(
  "Campillo de la Jara, El" = "El Campillo de la Jara",
  "Carpio de Tajo, El" = "El Carpio de Tajo",
  "Casar de Escalona, El" = "El Casar de Escalona",
  "Cerralbos, Los" = "Los Cerralbos",
  "Estrella, La" = "La Estrella",
  "Guardia, La" = "La Guardia",
  "Herencias, Las" = "Las Herencias",
  "Iglesuela, La" = "La Iglesuela del Tiétar",
  "Mata, La" = "La Mata",
  "Nava de Ricomalillo, La" = "La Nava de Ricomalillo",
  "Navalmorales, Los" = "Los Navalmorales",
  "Navalucillos, Los" = "Los Navalucillos",
  "Puebla de Almoradiel, La" = "La Puebla de Almoradiel",
  "Puebla de Montalbán, La" = "La Puebla de Montalbán",
  "Pueblanueva, La" = "La Pueblanueva",
  "Puente del Arzobispo, El" = "El Puente del Arzobispo",
  "Real de San Vicente, El" = "El Real de San Vicente",
  "Romeral, El" = "El Romeral",
  "Toboso, El" = "El Toboso",
  "Torre de Esteban Hambrán, La" = "La Torre de Esteban Hambrán",
  "Ventas con Peña Aguilera, Las" = "Las Ventas con Peña Aguilera",
  "Ventas de Retamosa, Las" = "Las Ventas de Retamosa",
  "Ventas de San Julián, Las" = "Las Ventas de San Julián",
  "Villa de Don Fadrique, La" = "La Villa de Don Fadrique",
  "Viso de San Juan, El" = "El Viso de San Juan",
  "Yébenes, Los" = "Los Yébenes"
)

# CUENCA
replacements_cuenca <- c(
  "Acebrón, El" = "El Acebrón",
  "Alberca de Záncara, La" = "La Alberca de Záncara",
  "Almarcha, La" = "La Almarcha",
  "Cañavate, El" = "El Cañavate",
  "Cierva, La" = "La Cierva",
  "Frontera, La" = "La Frontera",
  "Herrumblar, El" = "El Herrumblar",
  "Hinojosa, La" = "La Hinojosa",
  "Hinojosos, Los" = "Los Hinojosos",
  "Hito, El" = "El Hito",
  "Majadas, Las" = "Las Majadas",
  "Mesas, Las" = "Las Mesas",
  "Parra de las Vegas, La" = "La Parra de las Vegas",
  "Pedernoso, El" = "El Pedernoso",
  "Pedroñeras, Las" = "Las Pedroñeras",
  "Peral, El" = "El Peral",
  "Peraleja, La" = "La Peraleja",
  "Pesquera, La" = "La Pesquera",
  "Picazo, El" = "El Picazo",
  "Pozuelo, El" = "El Pozuelo",
  "Provencio, El" = "El Provencio",
  "Valle de Altomira, El" = "El Valle de Altomira",
  "Valeras, Las" = "Las Valeras",
  "Valdecolmenas, Los" = "Los Valdecolmenas"
)

# CIUDAD-REAL
replacements_ciudadreal <- c(
  "Cortijos, Los" = "Los Cortijos",
  "Labores, Las" = "Las Labores",
  "Pozuelos de Calatrava, Los" = "Los Pozuelos de Calatrava",
  "Solana, La" = "La Solana",
  "Robledo, El" = "El Robledo"
)

# ALBACETE
replacements_albacete <- c(
  "Ballestero, El" = "El Ballestero",
  "Bonillo, El" = "El Bonillo",
  "Gineta, La" = "La Gineta",
  "Herrera, La" = "La Herrera",
  "Recueja, La" = "La Recueja",
  "Roda, La" = "La Roda"
)

# CASTELLON 
replacements_castellon <- c(
  "Alcora, l'" = "l'Alcora",
  "Coves de Vinromà, les" = "les Coves de Vinromà",
  "Jana, la" = "la Jana",
  "Llosa, la" = "la Llosa",
  "Mata de Morella, la" = "la Mata de Morella",
  "Pobla de Benifassà, la" = "la Pobla de Benifassà",
  "Pobla Tornesa, la" = "la Pobla Tornesa",
  "Salzadella, la" = "la Salzadella",
  "Serratella, la" = "la Serratella",
  "Toro, El" = "El Toro",
  "Torre d'En Besora, la" = "la Torre d'En Besora",
  "Torre d'en Doménec, la" = "la Torre d'en Doménec",
  "Useras / Useres, les" = "Useras/les Useres",
  "Vall d'Uixó, la" = "la Vall d'Uixó",
  "Vilavella, la" = "la Vilavella",
  "Alqueries, les / Alquerías del Niño Perdido" = "les Alqueries/Alquerías del Niño Perdido",
  "Benicasim / Benicàssim" = "Benicasim/Benicàssim",
  "Borriana / Burriana" = "Borriana/Burriana",
  "Castellón de la Plana / Castelló de la Plana" = "Castelló de la Plana",
  "Chilches / Xilxes" = "Chilches/Xilxes",
  "Chodos / Xodos" = "Chodos/Xodos",
  "les Alqueries/Alquerías del Niño Perdido" = "les Alqueries/Alquerías del Niño Perdido",
  "Llucena / Lucena del Cid" = "Llucena/Lucena del Cid",
  "Oropesa del Mar / Orpesa" = "Oropesa del Mar/Orpesa",
  "Peníscola / Peñíscola" = "Peníscola/Peñíscola",
  "Sant Jordi / San Jorge" = "Sant Jordi/San Jorge",
  "Sueras / Suera" = "Sueras/Suera",
  "Useras/les Useres" = "Useras/les Useres",
  "Villafranca del Cid / Vilafranca" = "Vilafranca/Villafranca del Cid",
  "Almazora" = "Almassora",
  "Benlloch" = "Benlloc",
  "Herbés" = "Herbers",
  "Villafranca del Cid/Vilafranca" = "Vilafranca/Villafranca del Cid"
)

# VALENCIA
replacements_valencia <- c(
  "Alcúdia, l'" = "l'Alcúdia",
  "Alcúdia de Crespins, l'" = "l'Alcúdia de Crespins",
  "Alqueria de la Comtessa, l'" = "l'Alqueria de la Comtessa",
  "Eliana, l'" = "l'Eliana",
  "Ènova, l'" = "l'Énova",
  "Font d'En Carròs, la" = "la Font d'en Carròs",
  "Font de la Figuera, la" = "la Font de la Figuera",
  "Granja de la Costera, la" = "la Granja de la Costera",
  "Llosa de Ranes, la" = "la Llosa de Ranes",
  "Olleria, l'" = "l'Olleria",
  "Palomar, el" = "el Palomar",
  "Pobla de Farnals, la" = "la Pobla de Farnals",
  "Pobla del Duc, la" = "la Pobla del Duc",
  "Pobla de Vallbona, la" = "la Pobla de Vallbona",
  "Pobla Llarga, la" = "la Pobla Llarga",
  "Puig de Santa Maria, el" = "el Puig de Santa Maria",
  "Real de Gandia, el" = "el Real de Gandia",
  "Yesa, La" = "La Yesa",
  "Náquera" = "Nàquera/Náquera",
  "Alboraia / Alboraya" = "Alboraia/Alboraya",
  "Mogente / Moixent" = "Mogente/Moixent",
  "Montitxelvo / Montichelvo" = "Montitxelvo/Montichelvo",
  "Montroi / Montroy" = "Montroi/Montroy",
  "Novelé / Novetlè" = "Novelé/Novetlè",
  "Sagunto / Sagunt" = "Sagunto/Sagunt",
  "Vilallonga / Villalonga" = "Vilallonga/Villalonga",
  "Villanueva de Castellón" = "Castelló",
  "Genovés" = "el Genovés",
  "Rótova" = "Ròtova",
  "Valencia" = "València",
  "Algimia de Alfara" = "Algímia d'Alfara"
)

# ALICANTE
replacements_alicante <- c(
  "Atzúbia, l'" = "l'Atzúbia",
  "Alfàs del Pi, l'" = "l'Alfàs del Pi",
  "Alqueria d'Asnar, l'" = "l'Alqueria d'Asnar",
  "Benitachell / Poble Nou de Benitatxell, el" = "Benitachell/el Poble Nou de Benitatxell",
  "Campello, el" = "el Campello",
  "Castell de Guadalest, el" = "el Castell de Guadalest",
  "Fondó de les Neus, el / Hondón de las Nieves" = "el Fondó de les Neus/Hondón de las Nieves",
  "Nucia, la" = "la Nucia",
  "Pinós, el / Pinoso" = "el Pinós/Pinoso",
  "Ràfol d'Almúnia, el" = "el Ràfol d'Almúnia",
  "Romana, la" = "la Romana",
  "Vall d'Alcalà, la" = "la Vall d'Alcalà",
  "Vall d'Ebo, la" = "la Vall d'Ebo",
  "Vall de Laguar, la" = "la Vall de Laguar",
  "Verger, el" = "el Verger",
  "Poblets, els" = "els Poblets",
  "Vall de Gallinera" = "la Vall de Gallinera",
  "Alcoy / Alcoi" = "Alcoy/Alcoi",
  "Alicante / Alacant" = "Alicante/Alacant",
  "el Fondó de les Neus / Hondón de las Nieves" = "el Fondó de les Neus/Hondón de las Nieves",
  "el Pinós / Pinoso" = "el Pinós/Pinoso",
  "Elche / Elx" = "Elche/Elx",
  "Jávea / Xàbia" = "Jávea/Xàbia",
  "Jijona / Xixona" = "Jijona/Xixona",
  "Monóvar / Monòver" = "Monóvar/Monòver",
  "San Vicente del Raspeig / Sant Vicent del Raspeig" = "San Vicente del Raspeig/Sant Vicent del Raspeig",
  "Campo de Mirra / Camp de Mirra, el" = "Campo de Mirra/el Camp de Mirra",
  "Facheca" = "Fageca",
  "Lorcha / Orxa, l'" = "Lorcha/l'Orxa",
  "Torremanzanas / Torre de les Maçanes, la" = "Torremanzanas/la Torre de les Maçanes",
  "Villajoyosa / Vila Joiosa, la" = "Villajoyosa/la Vila Joiosa"

)
delete_alicante <- c(
  "Montesinos, Los"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))
munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))
munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))
munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))
munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))
munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Alicante" & name %in% delete_alicante))


# HUELVA
replacements_huelva <- c(
  "Almendro, El" = "El Almendro",
  "Campillo, El" = "El Campillo",
  "Cerro de Andévalo, El" = "El Cerro de Andévalo",
  "Granada de Río-Tinto, La" = "La Granada de Río-Tinto",
  "Granado, El" = "El Granado",
  "Marines, Los" = "Los Marines",
  "Nava, La" = "La Nava",
  "Palma del Condado, La" = "La Palma del Condado",
  "Zarza-Perrunal, La" = "La Zarza-Perrunal"
)

# SEVILLA
replacements_sevilla <- c(
  "Algaba, La" = "La Algaba",
  "Cabezas de San Juan, Las" = "Las Cabezas de San Juan",
  "Campana, La" = "La Campana",
  "Castillo de las Guardas, El" = "El Castillo de las Guardas",
  "Coronil, El" = "El Coronil",
  "Corrales, Los" = "Los Corrales",
  "Garrobo, El" = "El Garrobo",
  "Luisiana, La" = "La Luisiana",
  "Madroño, El" = "El Madroño",
  "Molares, Los" = "Los Molares",
  "Navas de la Concepción, Las" = "Las Navas de la Concepción",
  "Palacios y Villafranca, Los" = "Los Palacios y Villafranca",
  "Pedroso, El" = "El Pedroso",
  "Puebla de Cazalla, La" = "La Puebla de Cazalla",
  "Puebla de los Infantes, La" = "La Puebla de los Infantes",
  "Puebla del Río, La" = "La Puebla del Río",
  "Real de la Jara, El" = "El Real de la Jara",
  "Rinconada, La" = "La Rinconada",
  "Roda de Andalucía, La" = "La Roda de Andalucía",
  "Ronquillo, El" = "El Ronquillo",
  "Rubio, El" = "El Rubio",
  "Saucejo, El" = "El Saucejo",
  "Viso del Alcor, El" = "El Viso del Alcor",
  "Cuervo de Sevilla, El" = "El Cuervo de Sevilla"
)
delete_sevilla <- c(
  "Palmar de Troya, El"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Sevilla" & name %in% delete_sevilla))

# CORDOBA
replacements_cordoba <- c(
  "Blázquez, Los" = "Los Blázquez",
  "Carlota, La" = "La Carlota",
  "Carpio, El" = "El Carpio",
  "Granjuela, La" = "La Granjuela",
  "Guijo, El" = "El Guijo",
  "Rambla, La" = "La Rambla",
  "Victoria, La" = "La Victoria",
  "Viso, El" = "El Viso"
)
delete_cordoba <- c(
  "Fuente Carreteros",
  "Guijarrosa, La"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Cordoba" & name %in% delete_cordoba))

# JAEN
replacements_jaen <- c(
  "Carolina, La" = "La Carolina",
  "Guardia de Jaén, La" = "La Guardia de Jaén",
  "Iruela, La" = "La Iruela",
  "Puerta de Segura, La" = "La Puerta de Segura",
  "Villares, Los" = "Los Villares"
)

# CADIZ
replacements_cadiz <- c(
  "Barrios, Los" = "Los Barrios",
  "Bosque, El" = "El Bosque",
  "Gastor, El" = "El Gastor",
  "Línea de la Concepción, La" = "La Línea de la Concepción",
  "Puerto de Santa María, El" = "El Puerto de Santa María",
  "Medina-Sidonia" = "Medina Sidonia"
)

# MALAGA
delete_malaga <- c(
  "Serrato"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Malaga" & name %in% delete_malaga))

# GRANADA
replacements_granada <- c(
  "Calahorra, La" = "La Calahorra",
  "Malahá, La" = "La Malahá",
  "Peza, La" = "La Peza",
  "Zubia, La" = "La Zubia",
  "Taha, La" = "La Taha",
  "Valle, El" = "El Valle",
  "Gabias, Las" = "Las Gabias",
  "Guájares, Los" = "Los Guájares",
  "Pinar, El" = "El Pinar",
  "Jerez del Marquesado" = "Jérez del Marquesado"
)
delete_granada <- c(
  "Dehesas Viejas",
  "Domingo Pérez de Granada",
  "Fornes",
  "Játar"
)
munics_12 <- munics_12 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

munics_14 <- munics_14 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

munics_16 <- munics_16 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

munics_18 <- munics_18 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

munics_20 <- munics_20 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

munics_22 <- munics_22 %>%
  filter(!(ine.prov.name == "Granada" & name %in% delete_granada))

# ALMERIA
replacements_almeria <- c(
  "Gallardos, Los" = "Los Gallardos",
  "Tres Villas, Las" = "Las Tres Villas",
  "Ejido, El" = "El Ejido",
  "Mojonera, La" = "La Mojonera",
  "Albánchez" = "Albanchez"
)

# MURCIA
replacements_murcia <- c(
  "Torres de Cotillas, Las" = "Las Torres de Cotillas",
  "Unión, La" = "La Unión",
  "Alcázares, Los" = "Los Alcázares"
)

# BALEARES
replacements_baleares <- c(
  "Mercadal, Es" = "Es Mercadal",
  "Pobla, Sa" = "Sa Pobla",
  "Salines, Ses" = "ses Salines",
  "Castell, Es" = "es Castell",
  "Migjorn Gran, Es" = "Es Migjorn Gran",
  "Palma de Mallorca" = "Palma"
)

# LAS-PALMAS
replacements_laspalmas <- c(
  "Oliva, La" = "La Oliva",
  "Palmas de Gran Canaria, Las" = "Las Palmas de Gran Canaria",
  "Aldea de San Nicolás, La" = "La Aldea de San Nicolás"
)

# TENERIFE
replacements_tenerife <- c(
  "Guancha, La" = "La Guancha",
  "Llanos de Aridane, Los" = "Los Llanos de Aridane",
  "Matanza de Acentejo, La" = "La Matanza de Acentejo",
  "Orotava, La" = "La Orotava",
  "Paso, El" = "El Paso",
  "Realejos, Los" = "Los Realejos",
  "Rosario, El" = "El Rosario",
  "Sauzal, El" = "El Sauzal",
  "Silos, Los" = "Los Silos",
  "Tanque, El" = "El Tanque",
  "Victoria de Acentejo, La" = "La Victoria de Acentejo",
  "Pinar de El Hierro, El" = "El Pinar de El Hierro"
)

# CEUTA
replacements_ceuta <- c()

# MELILLA
replacements_melilla <- c()

provinces <- as.character(sort(unique(munics_12$ine.prov.name)))
replacements <- list(
  replacements_albacete,
  replacements_alicante,
  replacements_almeria,
  replacements_alava,
  replacements_asturias,
  replacements_avila,
  replacements_badajoz,
  replacements_baleares,
  replacements_barcelona,
  replacements_bizkaia,
  replacements_burgos,
  replacements_caceres,
  replacements_cadiz,
  replacements_cantabria,
  replacements_castellon,
  replacements_ceuta,
  replacements_ciudadreal,
  replacements_cordoba,
  replacements_coruna,
  replacements_cuenca,
  replacements_gipuzkoa,
  replacements_girona,
  replacements_granada,
  replacements_guadalajara,
  replacements_huelva,
  replacements_huesca,
  replacements_jaen,
  replacements_leon,
  replacements_lleida,
  replacements_lugo,
  replacements_madrid,
  replacements_malaga,
  replacements_melilla,
  replacements_murcia,
  replacements_navarra,
  replacements_ourense,
  replacements_palencia,
  replacements_laspalmas,
  replacements_pontevedra,
  replacements_la_rioja,
  replacements_salamanca,
  replacements_tenerife,
  replacements_segovia,
  replacements_sevilla,
  replacements_soria,
  replacements_tarragona,
  replacements_teruel,
  replacements_toledo,
  replacements_valencia,
  replacements_valladolid,
  replacements_zamora,
  replacements_zaragoza
)



for (i in 1:length(provinces)){
  replace <- replacements[[i]]
  province <- provinces[i]
  #2012
  for (j in 1:length(munics_12[munics_12$ine.prov.name==province,]$name)) {
  if (munics_12[munics_12$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_12[munics_12$ine.prov.name==province,]$name[j] <-
      replace[munics_12[munics_12$ine.prov.name==province,]$name[j]]
  }
  }
  #2014
  for (j in 1:length(munics_14[munics_14$ine.prov.name==province,]$name)) {
  if (munics_14[munics_14$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_14[munics_14$ine.prov.name==province,]$name[j] <-
      replace[munics_14[munics_14$ine.prov.name==province,]$name[j]]
  }
  }
  #2016
    for (j in 1:length(munics_16[munics_16$ine.prov.name==province,]$name)) {
  if (munics_16[munics_16$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_16[munics_16$ine.prov.name==province,]$name[j] <-
      replace[munics_16[munics_16$ine.prov.name==province,]$name[j]]
  }
  }
  #2018
    for (j in 1:length(munics_18[munics_18$ine.prov.name==province,]$name)) {
  if (munics_18[munics_18$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_18[munics_18$ine.prov.name==province,]$name[j] <-
      replace[munics_18[munics_18$ine.prov.name==province,]$name[j]]
  }
  }
  #2020
    for (j in 1:length(munics_20[munics_20$ine.prov.name==province,]$name)) {
  if (munics_20[munics_20$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_20[munics_20$ine.prov.name==province,]$name[j] <-
      replace[munics_20[munics_20$ine.prov.name==province,]$name[j]]
  }
  }
  #2022
    for (j in 1:length(munics_22[munics_22$ine.prov.name==province,]$name)) {
  if (munics_22[munics_22$ine.prov.name==province,]$name[j] %in% names(replace)) {
    
    munics_22[munics_22$ine.prov.name==province,]$name[j] <-
      replace[munics_22[munics_22$ine.prov.name==province,]$name[j]]
  }
  }
}

# 2012
provs_12 <- esp_get_prov()

provs_12$ine.prov.name <- factor(provs_12$ine.prov.name)

provs_12 <- provs_12 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) # new name = old name
# 2014
provs_14 <- esp_get_prov()
provs_14$ine.prov.name <- factor(provs_14$ine.prov.name)
provs_14 <- provs_14 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) 
# 2016
provs_16 <- esp_get_prov()
provs_16$ine.prov.name <- factor(provs_16$ine.prov.name)
provs_16 <- provs_16 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) 
# 2018
provs_18 <- esp_get_prov()
provs_18$ine.prov.name <- factor(provs_18$ine.prov.name)
provs_18 <- provs_18 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) 
# 2020
provs_20 <- esp_get_prov()
provs_20$ine.prov.name <- factor(provs_20$ine.prov.name)
provs_20 <- provs_20 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) 
# 2022
provs_22 <- esp_get_prov()
provs_22$ine.prov.name <- factor(provs_22$ine.prov.name)
provs_22 <- provs_22 %>%
  mutate(ine.prov.name = fct_recode(ine.prov.name,
                               "Almeria" = "Almería",
                               "Alicante" = "Alicante/Alacant",
                               "Alava" = "Araba/Álava",
                               "Avila" = "Ávila",
                               "Baleares" = "Balears, Illes",
                               "La Rioja" = "Rioja, La",
                               "Caceres" = "Cáceres",
                               "Cadiz"="Cádiz",
                               "Castellon" = "Castellón/Castelló",
                               "Ciudad-real" = "Ciudad Real",
                               "Cordoba" = "Córdoba",
                               "Coruna"="Coruña, A",
                               "Jaen" = "Jaén",
                               "Las-palmas"="Palmas, Las",
                               "Leon" = "León",
                               "Malaga" = "Málaga",
                               "Tenerife" = "Santa Cruz de Tenerife",
                               "Valencia"="Valencia/València"
                               )) 

###############################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION (MUNICIPALITIES)
###############################################################
# Create 3 new variables: Total>65, Total>85, Total>100
data$Total_65 <- data$m_65_69+data$m_70_74+data$m_75_79+data$m_80_84+
  data$m_85_89+data$m_90_94+data$m_95_99+data$m_100+data$f_65_69+
  data$f_70_74+data$f_75_79+data$f_80_84+data$f_85_89+data$f_90_94+
  data$f_95_99+data$f_100

data$Total_85 <- data$m_85_89+data$m_90_94+data$m_95_99+data$m_100+
  +data$f_85_89+data$f_90_94+data$f_95_99+data$f_100

data$Total_100 <- data$m_100+data$f_100

# Compute IL
# Summarize total inhabitants by municipality and Year
habs_munic <- data %>%
  group_by(PROV, MUNICIPIO, year) %>%
  summarize(total = sum(Total_habs),
            older_65 = sum(Total_65),
            older_85 = sum(Total_85),
            older_100 = sum(Total_100))
# 2012
munic_12 <- habs_munic[habs_munic$year==2012,]
total_C12 <- sum(munic_12$older_100)
total12 <- sum(munic_12$total)
munic_12$IL <- (munic_12$older_100/total_C12)/(munic_12$total/total12)
print(munic_12)
# Check the distribution of IL
hist(munic_12$IL, 
     breaks=30,
     main = "Histogram of IL",
     xlab = "IL",
     ylab = "Frequency",
     col = "blue", # Color of the bars
     border = "black") # Border color of the bars
# 2014
munic_14 <- habs_munic[habs_munic$year==2014,]
total_C14 <- sum(munic_14$older_100)
total14 <- sum(munic_14$total)
munic_14$IL <- (munic_14$older_100/total_C14)/(munic_14$total/total14)
# 2016
munic_16 <- habs_munic[habs_munic$year==2016,]
total_C16 <- sum(munic_16$older_100)
total16 <- sum(munic_16$total)
munic_16$IL <- (munic_16$older_100/total_C16)/(munic_16$total/total16)
# 2018
munic_18 <- habs_munic[habs_munic$year==2018,]
total_C18 <- sum(munic_18$older_100)
total18 <- sum(munic_18$total)
munic_18$IL <- (munic_18$older_100/total_C18)/(munic_18$total/total18)
# 2020
munic_20 <- habs_munic[habs_munic$year==2020,]
total_C20 <- sum(munic_20$older_100)
total20 <- sum(munic_20$total)
munic_20$IL <- (munic_20$older_100/total_C20)/(munic_20$total/total20)
# 2022
munic_22 <- habs_munic[habs_munic$year==2022,]
total_C22 <- sum(munic_22$older_100)
total22 <- sum(munic_22$total)
munic_22$IL <- (munic_22$older_100/total_C22)/(munic_22$total/total22)

munic_12$MUNICIPIO <- as.character(munic_12$MUNICIPIO)
munic_12$PROV <- as.character(munic_12$PROV)
  # Left-join
munics_12 <- munics_12 %>%
  left_join(munic_12, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

custom_colors <- c("white", "wheat3","orange", "darkgreen")
breaks <- c(-0.00001,0.00001, 2, 4, Inf)
labels <- c("0", "0 - 2", "2 - 4", "> 4")

plot_IL_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )

munic_14$MUNICIPIO <- as.character(munic_14$MUNICIPIO)
munic_14$PROV <- as.character(munic_14$PROV)
munics_14 <- munics_14 %>%
  left_join(munic_14, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )

munic_16$MUNICIPIO <- as.character(munic_16$MUNICIPIO)
munic_16$PROV <- as.character(munic_16$PROV)
munics_16 <- munics_16 %>%
  left_join(munic_16, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )

munic_18$MUNICIPIO <- as.character(munic_18$MUNICIPIO)
munic_18$PROV <- as.character(munic_18$PROV)
munics_18 <- munics_18 %>%
  left_join(munic_18, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )

munic_20$MUNICIPIO <- as.character(munic_20$MUNICIPIO)
munic_20$PROV <- as.character(munic_20$PROV)
munics_20 <- munics_20 %>%
  left_join(munic_20, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )

munic_22$MUNICIPIO <- as.character(munic_22$MUNICIPIO)
munic_22$PROV <- as.character(munic_22$PROV)
munics_22 <- munics_22 %>%
  left_join(munic_22, by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(IL, breaks = breaks, labels = labels)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors,
    labels = labels,
    drop = FALSE
  ) +
  labs(
    fill = "IL",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_IL_12, plot_IL_14, plot_IL_16, plot_IL_18, plot_IL_20, plot_IL_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
wanted_cols <- c("year","MUNICIPIO", "PROV", "IL")
# 2012
# Order by IL to get the largest values
munic_12_sorted_desc <- munic_12[order(munic_12$IL, decreasing = TRUE), ]
# Extract the 6 largest values
largest_12 <- head(munic_12_sorted_desc[,wanted_cols], 6)
second_largest_12 <- munic_12_sorted_desc[,wanted_cols][7:12,]
# Repeat the same for the remaining years and combine the dataframes conveniently
# 2014
munic_14_sorted_desc <- munic_14[order(munic_14$IL, decreasing = TRUE), ]
largest_14 <- head(munic_14_sorted_desc[,wanted_cols], 6)
second_largest_14 <- munic_14_sorted_desc[,wanted_cols][7:12,]
# 2016
munic_16_sorted_desc <- munic_16[order(munic_16$IL, decreasing = TRUE), ]
largest_16 <- head(munic_16_sorted_desc[,wanted_cols], 6)
second_largest_16 <- munic_16_sorted_desc[,wanted_cols][7:12,]
# 2018
munic_18_sorted_desc <- munic_18[order(munic_18$IL, decreasing = TRUE), ]
largest_18 <- head(munic_18_sorted_desc[,wanted_cols], 6)
second_largest_18 <- munic_18_sorted_desc[,wanted_cols][7:12,]
# 2020
munic_20_sorted_desc <- munic_20[order(munic_20$IL, decreasing = TRUE), ]
largest_20 <- head(munic_20_sorted_desc[,wanted_cols], 6)
second_largest_20 <- munic_20_sorted_desc[,wanted_cols][7:12,]
# 2022
munic_22_sorted_desc <- munic_22[order(munic_22$IL, decreasing = TRUE), ]
largest_22 <- head(munic_22_sorted_desc[,wanted_cols], 6)
second_largest_22 <- munic_22_sorted_desc[,wanted_cols][7:12,]
# Combination
largest_IL <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
second_largest_IL <- rbind(second_largest_12,second_largest_14,second_largest_16,second_largest_18,
                     second_largest_20,second_largest_22)
combination_IL <- cbind(largest_IL,
                        second_largest_IL[,c("MUNICIPIO","PROV","IL")])
rello <- c(
  munic_12[munic_12$MUNICIPIO == "Rello", "IL"][[1]],
  munic_14[munic_14$MUNICIPIO == "Rello", "IL"][[1]],
  munic_16[munic_16$MUNICIPIO == "Rello", "IL"][[1]],
  munic_18[munic_18$MUNICIPIO == "Rello", "IL"][[1]],
  munic_20[munic_20$MUNICIPIO == "Rello", "IL"][[1]],
  munic_22[munic_22$MUNICIPIO == "Rello", "IL"][[1]]
)
requena_de_campos <- c(
  munic_12[munic_12$MUNICIPIO == "Requena de Campos", "IL"][[1]],
  munic_14[munic_14$MUNICIPIO == "Requena de Campos", "IL"][[1]],
  munic_16[munic_16$MUNICIPIO == "Requena de Campos", "IL"][[1]],
  munic_18[munic_18$MUNICIPIO == "Requena de Campos", "IL"][[1]],
  munic_20[munic_20$MUNICIPIO == "Requena de Campos", "IL"][[1]],#NA
  munic_22[munic_22$MUNICIPIO == "Requena de Campos", "IL"][[1]]#NA
)
requena_de_campos <- c(requena_de_campos, rep(NA,2))
valle_de_bardaji <- c(
  munic_12[munic_12$MUNICIPIO == "Valle de Bardají", "IL"][[1]],
  munic_14[munic_14$MUNICIPIO == "Valle de Bardají", "IL"][[1]],
  munic_16[munic_16$MUNICIPIO == "Valle de Bardají", "IL"][[1]],
  munic_18[munic_18$MUNICIPIO == "Valle de Bardají", "IL"][[1]],
  munic_20[munic_20$MUNICIPIO == "Valle de Bardají", "IL"][[1]],
  munic_22[munic_22$MUNICIPIO == "Valle de Bardají", "IL"][[1]]
)
crivillen <- c(
  munic_12[munic_12$MUNICIPIO=="Crivillén","IL"][[1]], 
            munic_14[munic_14$MUNICIPIO=="Crivillén","IL"][[1]], 
            munic_16[munic_16$MUNICIPIO=="Crivillén","IL"][[1]], 
            munic_18[munic_18$MUNICIPIO=="Crivillén","IL"][[1]], 
            munic_20[munic_20$MUNICIPIO=="Crivillén","IL"][[1]], 
            munic_22[munic_22$MUNICIPIO=="Crivillén","IL"][[1]]
  )
estriegana <- c(
  munic_12[munic_12$MUNICIPIO=="Estriégana","IL"][[1]], 
            munic_14[munic_14$MUNICIPIO=="Estriégana","IL"][[1]], 
            munic_16[munic_16$MUNICIPIO=="Estriégana","IL"][[1]], 
            munic_18[munic_18$MUNICIPIO=="Estriégana","IL"][[1]], 
            munic_20[munic_20$MUNICIPIO=="Estriégana","IL"][[1]], 
            munic_22[munic_22$MUNICIPIO=="Estriégana","IL"][[1]]
  )
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Rello = rello,
  Requena_de_Campos = requena_de_campos,
  Valle_de_Bardají = valle_de_bardaji,
  Crivillén = crivillen,
  Estriégana = estriegana
)
# TIME SERIES
data_long <- gather(data_short, key = "Municipality", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Municipality, group = Municipality)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "IL",
       color = "Municipality") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )
#################################################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION AGES 65 AND ABOVE (MUNICIPALITIES)
#################################################################################
# 2012
total_S12 <- sum(munic_12$older_65)
munic_12$IL2 <- (munic_12$older_100/total_C12)/(munic_12$older_65/total_S12)
# Distribution
hist(munic_12$IL2, 
     breaks=30,
     main = "Histogram of IL (>65)",
     xlab = "IL (>65)",
     ylab = "Frequency",
     col = "blue", 
     border = "black") 
# 2014
total_S14 <- sum(munic_14$older_65)
munic_14$IL2 <- (munic_14$older_100/total_C14)/(munic_14$older_65/total_S14)
# 2016
total_S16 <- sum(munic_16$older_65)
munic_16$IL2 <- (munic_16$older_100/total_C16)/(munic_16$older_65/total_S16)
# 2018
total_S18 <- sum(munic_18$older_65)
munic_18$IL2 <- (munic_18$older_100/total_C18)/(munic_18$older_65/total_S18)
# 2020
total_S20 <- sum(munic_20$older_65)
munic_20$IL2 <- (munic_20$older_100/total_C20)/(munic_20$older_65/total_S20)
# 2022
total_S22 <- sum(munic_22$older_65)
munic_22$IL2 <- (munic_22$older_100/total_C22)/(munic_22$older_65/total_S22)

munics_12 <- munics_12 %>%
  left_join(munic_12[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

custom_colors2 <- c("white", "wheat3","orange", "darkgreen")
breaks2 <- c(-0.00001,0.00001, 1.5, 3.5, Inf)
labels2 <- c("0", "0 - 1.5", "1.5 - 3.5", "> 3.5")

plot_IL2_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(IL2, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
munics_14 <- munics_14 %>%
  left_join(munic_14[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL2_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(IL2.x, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
munics_16 <- munics_16 %>%
  left_join(munic_16[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL2_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(IL2, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = ,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
munics_18 <- munics_18 %>%
  left_join(munic_18[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL2_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(IL2, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
munics_20 <- munics_20 %>%
  left_join(munic_20[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL2_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(IL2, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
munics_22 <- munics_22 %>%
  left_join(munic_22[,c("IL2","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL2_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(IL2, breaks = breaks2, labels = labels2)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors2,
    labels = labels2,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>65)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_IL2_12, plot_IL2_14, plot_IL2_16, plot_IL2_18, plot_IL2_20, plot_IL2_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","MUNICIPIO", "PROV", "IL2")
# 2012
# Order by IL2 to get the largest values
munic_12_sorted_desc <- munic_12[order(munic_12$IL2, decreasing = TRUE), ]
# Extract the 6 largest values
largest_12 <- head(munic_12_sorted_desc[,wanted_cols], 6)
second_largest_12 <- munic_12_sorted_desc[,wanted_cols][7:12,]
# Repeat the same for the remaining years and combine the dataframes conveniently
# 2014
munic_14_sorted_desc <- munic_14[order(munic_14$IL2, decreasing = TRUE), ]
largest_14 <- head(munic_14_sorted_desc[,wanted_cols], 6)
second_largest_14 <- munic_14_sorted_desc[,wanted_cols][7:12,]
# 2016
munic_16_sorted_desc <- munic_16[order(munic_16$IL2, decreasing = TRUE), ]
largest_16 <- head(munic_16_sorted_desc[,wanted_cols], 6)
second_largest_16 <- munic_16_sorted_desc[,wanted_cols][7:12,]
# 2018
munic_18_sorted_desc <- munic_18[order(munic_18$IL2, decreasing = TRUE), ]
largest_18 <- head(munic_18_sorted_desc[,wanted_cols], 6)
second_largest_18 <- munic_18_sorted_desc[,wanted_cols][7:12,]
# 2020
munic_20_sorted_desc <- munic_20[order(munic_20$IL2, decreasing = TRUE), ]
largest_20 <- head(munic_20_sorted_desc[,wanted_cols], 6)
second_largest_20 <- munic_20_sorted_desc[,wanted_cols][7:12,]
# 2022
munic_22_sorted_desc <- munic_22[order(munic_22$IL2, decreasing = TRUE), ]
largest_22 <- head(munic_22_sorted_desc[,wanted_cols], 6)
second_largest_22 <- munic_22_sorted_desc[,wanted_cols][7:12,]
# Combination
largest_IL2 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
second_largest_IL2 <- rbind(second_largest_12,second_largest_14,second_largest_16,second_largest_18,
                     second_largest_20,second_largest_22)
combination_IL2 <- cbind(largest_IL2,
                        second_largest_IL2[,c("MUNICIPIO","PROV","IL2")])
### Time series
rello <- c(
  munic_12[munic_12$MUNICIPIO == "Rello", "IL2"][[1]],
  munic_14[munic_14$MUNICIPIO == "Rello", "IL2"][[1]],
  munic_16[munic_16$MUNICIPIO == "Rello", "IL2"][[1]],
  munic_18[munic_18$MUNICIPIO == "Rello", "IL2"][[1]],
  munic_20[munic_20$MUNICIPIO == "Rello", "IL2"][[1]],
  munic_22[munic_22$MUNICIPIO == "Rello", "IL2"][[1]]
)
requena_de_campos <- c(
  munic_12[munic_12$MUNICIPIO == "Requena de Campos", "IL2"][[1]],
  munic_14[munic_14$MUNICIPIO == "Requena de Campos", "IL2"][[1]],
  munic_16[munic_16$MUNICIPIO == "Requena de Campos", "IL2"][[1]],
  munic_18[munic_18$MUNICIPIO == "Requena de Campos", "IL2"][[1]],
  munic_20[munic_20$MUNICIPIO == "Requena de Campos", "IL2"][[1]],#NA
  munic_22[munic_22$MUNICIPIO == "Requena de Campos", "IL2"][[1]]#NA
)
requena_de_campos <- c(requena_de_campos, rep(NA,2))
valle_de_bardaji <- c(
  munic_12[munic_12$MUNICIPIO == "Valle de Bardají", "IL2"][[1]],
  munic_14[munic_14$MUNICIPIO == "Valle de Bardají", "IL2"][[1]],
  munic_16[munic_16$MUNICIPIO == "Valle de Bardají", "IL2"][[1]],
  munic_18[munic_18$MUNICIPIO == "Valle de Bardají", "IL2"][[1]],
  munic_20[munic_20$MUNICIPIO == "Valle de Bardají", "IL2"][[1]],
  munic_22[munic_22$MUNICIPIO == "Valle de Bardají", "IL2"][[1]]
)
estriegana <- c(
  munic_12[munic_12$MUNICIPIO=="Estriégana","IL2"][[1]], 
            munic_14[munic_14$MUNICIPIO=="Estriégana","IL2"][[1]], 
            munic_16[munic_16$MUNICIPIO=="Estriégana","IL2"][[1]], 
            munic_18[munic_18$MUNICIPIO=="Estriégana","IL2"][[1]], 
            munic_20[munic_20$MUNICIPIO=="Estriégana","IL2"][[1]], 
            munic_22[munic_22$MUNICIPIO=="Estriégana","IL2"][[1]]
  )
caracena <- c(
  munic_12[munic_12$MUNICIPIO == "Caracena", "IL2"][[1]],
  munic_14[munic_14$MUNICIPIO == "Caracena", "IL2"][[1]],
  munic_16[munic_16$MUNICIPIO == "Caracena", "IL2"][[1]],
  munic_18[munic_18$MUNICIPIO == "Caracena", "IL2"][[1]],
  munic_20[munic_20$MUNICIPIO == "Caracena", "IL2"][[1]],
  munic_22[munic_22$MUNICIPIO == "Caracena", "IL2"][[1]]
)
somolinos <- c(
  munic_12[munic_12$MUNICIPIO == "Somolinos", "IL2"][[1]],
  munic_14[munic_14$MUNICIPIO == "Somolinos", "IL2"][[1]],
  munic_16[munic_16$MUNICIPIO == "Somolinos", "IL2"][[1]],
  munic_18[munic_18$MUNICIPIO == "Somolinos", "IL2"][[1]],
  munic_20[munic_20$MUNICIPIO == "Somolinos", "IL2"][[1]],
  munic_22[munic_22$MUNICIPIO == "Somolinos", "IL2"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Rello = rello,
  Requena_de_Campos = requena_de_campos,
  Valle_de_Bardají = valle_de_bardaji,
  Caracena = caracena,
  Estriégana = estriegana,
  Somolinos = somolinos
)

#################################################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION AGES 85 AND ABOVE (MUNICIPALITIES)
#################################################################################

# 2012
total_O12 <- sum(munic_12$older_85)
munic_12$IL3 <- (munic_12$older_100/total_C12)/(munic_12$older_85/total_O12)
# Distribution
hist(munic_12$IL3, 
     breaks=30,
     main = "Histogram of IL (>85)",
     xlab = "IL (>85)",
     ylab = "Frequency",
     col = "blue", 
     border = "black") 
# 2014
total_O14 <- sum(munic_14$older_85)
munic_14$IL3 <- (munic_14$older_100/total_C14)/(munic_14$older_85/total_O14)
# 2016
total_O16 <- sum(munic_16$older_85)
munic_16$IL3 <- (munic_16$older_100/total_C16)/(munic_16$older_85/total_O16)
# 2018
total_O18 <- sum(munic_18$older_85)
munic_18$IL3 <- (munic_18$older_100/total_C18)/(munic_18$older_85/total_O18)
# 2020
total_O20 <- sum(munic_20$older_85)
munic_20$IL3 <- (munic_20$older_100/total_C20)/(munic_20$older_85/total_O20)
# 2022
total_O22 <- sum(munic_22$older_85)
munic_22$IL3 <- (munic_22$older_100/total_C22)/(munic_22$older_85/total_O22)

munics_12 <- munics_12 %>%
  left_join(munic_12[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
custom_colors3 <- c("white", "wheat3","orange", "darkgreen")
breaks3 <- c(-0.00001,0.00001, 1.5, 3.5, Inf)
labels3 <- c("0", "0 - 1", "1 - 3", "> 3")

plot_IL3_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
munics_14 <- munics_14 %>%
  left_join(munic_14[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL3_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
munics_16 <- munics_16 %>%
  left_join(munic_16[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL3_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
munics_18 <- munics_18 %>%
  left_join(munic_18[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL3_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
munics_20 <- munics_20 %>%
  left_join(munic_20[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))

plot_IL3_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
munics_22 <- munics_22 %>%
  left_join(munic_22[,c("IL3","PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_IL3_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(IL3, breaks = breaks3, labels = labels3)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors3,
    labels = labels3,
    drop = FALSE
  ) +
  labs(
    fill = "IL (>85)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_IL3_12, plot_IL3_14, plot_IL3_16, plot_IL3_18, plot_IL3_20, plot_IL3_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","MUNICIPIO", "PROV", "IL3")
# 2012
# Order by IL3 to get the largest values
munic_12_sorted_desc <- munic_12[order(munic_12$IL3, decreasing = TRUE), ]
# Extract the 6 largest values
largest_12 <- head(munic_12_sorted_desc[,wanted_cols], 6)
second_largest_12 <- munic_12_sorted_desc[,wanted_cols][7:12,]
# Repeat the same for the remaining years and combine the dataframes conveniently
# 2014
munic_14_sorted_desc <- munic_14[order(munic_14$IL3, decreasing = TRUE), ]
largest_14 <- head(munic_14_sorted_desc[,wanted_cols], 6)
second_largest_14 <- munic_14_sorted_desc[,wanted_cols][7:12,]
# 2016
munic_16_sorted_desc <- munic_16[order(munic_16$IL3, decreasing = TRUE), ]
largest_16 <- head(munic_16_sorted_desc[,wanted_cols], 6)
second_largest_16 <- munic_16_sorted_desc[,wanted_cols][7:12,]
# 2018
munic_18_sorted_desc <- munic_18[order(munic_18$IL3, decreasing = TRUE), ]
largest_18 <- head(munic_18_sorted_desc[,wanted_cols], 6)
second_largest_18 <- munic_18_sorted_desc[,wanted_cols][7:12,]
# 2020
munic_20_sorted_desc <- munic_20[order(munic_20$IL3, decreasing = TRUE), ]
largest_20 <- head(munic_20_sorted_desc[,wanted_cols], 6)
second_largest_20 <- munic_20_sorted_desc[,wanted_cols][7:12,]
# 2022
munic_22_sorted_desc <- munic_22[order(munic_22$IL3, decreasing = TRUE), ]
largest_22 <- head(munic_22_sorted_desc[,wanted_cols], 6)
second_largest_22 <- munic_22_sorted_desc[,wanted_cols][7:12,]
# Combination
largest_IL3 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
second_largest_IL3 <- rbind(second_largest_12,second_largest_14,second_largest_16,second_largest_18,
                     second_largest_20,second_largest_22)
combination_IL3 <- cbind(largest_IL3,
                        second_largest_IL3[,c("MUNICIPIO","PROV","IL3")])
### Time series
albendiego <- c(
  munic_12[munic_12$MUNICIPIO == "Albendiego", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Albendiego", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Albendiego", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Albendiego", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Albendiego", "IL3"][[1]],
  munic_22[munic_22$MUNICIPIO == "Albendiego", "IL3"][[1]]
)
berdejo <- c(
  munic_12[munic_12$MUNICIPIO == "Berdejo", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Berdejo", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Berdejo", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Berdejo", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Berdejo", "IL3"][[1]],#NA
  munic_22[munic_22$MUNICIPIO == "Berdejo", "IL3"][[1]] #NA
)
berdejo <- c(berdejo, rep(NA,2))
jatiel <- c(
  munic_12[munic_12$MUNICIPIO == "Jatiel", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Jatiel", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Jatiel", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Jatiel", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Jatiel", "IL3"][[1]],#NA
  munic_22[munic_22$MUNICIPIO == "Jatiel", "IL3"][[1]]#NA
)
jatiel <- c(jatiel, rep(NA,2))
olmedilla <- c(
  munic_12[munic_12$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]],
  munic_22[munic_22$MUNICIPIO == "Olmedilla de Eliz", "IL3"][[1]]
)
olmedilla <- c(olmedilla[1], NA, olmedilla[2],olmedilla[3], rep(NA,2))
castroserracin <- c(
  munic_12[munic_12$MUNICIPIO == "Castroserracín", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Castroserracín", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Castroserracín", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Castroserracín", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Castroserracín", "IL3"][[1]],
  munic_22[munic_22$MUNICIPIO == "Castroserracín", "IL3"][[1]]
)
carazo <- c(
  munic_12[munic_12$MUNICIPIO == "Carazo", "IL3"][[1]],
  munic_14[munic_14$MUNICIPIO == "Carazo", "IL3"][[1]],
  munic_16[munic_16$MUNICIPIO == "Carazo", "IL3"][[1]],
  munic_18[munic_18$MUNICIPIO == "Carazo", "IL3"][[1]],
  munic_20[munic_20$MUNICIPIO == "Carazo", "IL3"][[1]],
  munic_22[munic_22$MUNICIPIO == "Carazo", "IL3"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Albendiego = albendiego,
  Berdejo = berdejo,
  Jatiel = jatiel,
  Olmedilla_de_Eliz = olmedilla,
  Castroserracín = castroserracin,
  Carazo = carazo
)
# TIME SERIES
data_long <- gather(data_short, key = "Municipality", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Municipality, group = Municipality)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "IL(>85)",
       color = "Municipality") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),    # Increase the legend text size
    legend.title = element_text(size = 18)    # Increase the legend title size
  )

############################################################
# SEX RATIO AGES 65 AND ABOVE (MUNICIPALITIES)
############################################################

# Create 6 new variables: Totalm>65, Totalf>65, Totalm>85, Totalf>85,
# Totalm>100, Totalf>100
data$Totalm_65 <- data$m_65_69+data$m_70_74+data$m_75_79+data$m_80_84+
  data$m_85_89+data$m_90_94+data$m_95_99+data$m_100

data$Totalf_65 <- data$f_65_69+data$f_70_74+data$f_75_79+data$f_80_84+
  data$f_85_89+data$f_90_94+data$f_95_99+data$f_100

data$Totalm_85 <-data$m_85_89+data$m_90_94+data$m_95_99+data$m_100

data$Totalf_85 <-data$f_85_89+data$f_90_94+data$f_95_99+data$f_100
# Summarize by municipality and Year
mf_munic <- data %>%
  group_by(PROV, MUNICIPIO, year) %>%
  summarize(olderm_65 = sum(Totalm_65),
            olderf_65 = sum(Totalf_65),
            olderm_85 = sum(Totalm_85),
            olderf_85 = sum(Totalf_85),
            olderm_100 = sum(m_100),
            olderf_100 = sum(f_100))
# Print the resulting dataframe
print(mf_munic)

# Compute SEX RATIO for every year
# 2012
mf_12 <- mf_munic[mf_munic$year==2012,]
mf_12$SR_65 <- mf_12$olderm_65/mf_12$olderf_65*100
mf_12$SR_85 <- mf_12$olderm_85/mf_12$olderf_85*100
mf_12$SR_100 <- mf_12$olderm_100/mf_12$olderf_100*100
any(is.na(mf_12$SR_65))
any(is.na(mf_12$SR_85))
any(is.na(mf_12$SR_100))
# Check the distribution of SR
par(mfrow=c(1,3))
hist(mf_12$SR_65, 
     breaks=30,
     main = "Histogram of SR (>65)",
     xlab = "SR",
     ylab = "Frequency",
     col = "blue",
     border = "black")
hist(mf_12$SR_85, 
     breaks=30,
     main = "Histogram of SR (>85)",
     xlab = "SR",
     ylab = "Frequency",
     col = "blue",
     border = "black")
hist(mf_12$SR_100, 
     breaks=30,
     main = "Histogram of SR (>100)",
     xlab = "SR",
     ylab = "Frequency",
     col = "blue",
     border = "black")
par(mfrow=c(1,1))

# 2014
mf_14 <- mf_munic[mf_munic$year==2014,]
mf_14$SR_65 <- mf_14$olderm_65/mf_14$olderf_65*100
mf_14$SR_85 <- mf_14$olderm_85/mf_14$olderf_85*100
mf_14$SR_100 <- mf_14$olderm_100/mf_14$olderf_100*100

# 2016
mf_16 <- mf_munic[mf_munic$year==2016,]
mf_16$SR_65 <- mf_16$olderm_65/mf_16$olderf_65*100
mf_16$SR_85 <- mf_16$olderm_85/mf_16$olderf_85*100
mf_16$SR_100 <- mf_16$olderm_100/mf_16$olderf_100*100

# 2018
mf_18 <- mf_munic[mf_munic$year==2018,]
mf_18$SR_65 <- mf_18$olderm_65/mf_18$olderf_65*100
mf_18$SR_85 <- mf_18$olderm_85/mf_18$olderf_85*100
mf_18$SR_100 <- mf_18$olderm_100/mf_18$olderf_100*100

# 2020
mf_20 <- mf_munic[mf_munic$year==2020,]
mf_20$SR_65 <- mf_20$olderm_65/mf_20$olderf_65*100
mf_20$SR_85 <- mf_20$olderm_85/mf_20$olderf_85*100
mf_20$SR_100 <- mf_20$olderm_100/mf_20$olderf_100*100

# 2022
mf_22 <- mf_munic[mf_munic$year==2022,]
mf_22$SR_65 <- mf_22$olderm_65/mf_22$olderf_65*100
mf_22$SR_85 <- mf_22$olderm_85/mf_22$olderf_85*100
mf_22$SR_100 <- mf_22$olderm_100/mf_22$olderf_100*100

# Plot SR 2012
mf_12$MUNICIPIO <- as.character(mf_12$MUNICIPIO)
mf_12$PROV <- as.character(mf_12$PROV)
munics_12 <- munics_12 %>%
  left_join(mf_12[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
custom_colors_65 <- c("white", "wheat3","salmon2","orange", "darkgreen")
breaks_65 <- c(-0.0001, 50, 80, 100, 200, Inf)  
labels_65 <- c("0% - 50%", "50% - 80%", "80% - 100%","100% - 200%", "> 200%")
plot_SR65_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(SR_65.y, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
# Plot SR 2014
mf_14$MUNICIPIO <- as.character(mf_14$MUNICIPIO)
mf_14$PROV <- as.character(mf_14$PROV)
munics_14 <- munics_14 %>%
  left_join(mf_14[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_SR65_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(SR_65, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
mf_16$MUNICIPIO <- as.character(mf_16$MUNICIPIO)
mf_16$PROV <- as.character(mf_16$PROV)
munics_16 <- munics_16 %>%
  left_join(mf_16[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_SR65_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(SR_65, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
mf_18$MUNICIPIO <- as.character(mf_18$MUNICIPIO)
mf_18$PROV <- as.character(mf_18$PROV)
munics_18 <- munics_18 %>%
  left_join(mf_18[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_SR65_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(SR_65, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
mf_20$MUNICIPIO <- as.character(mf_20$MUNICIPIO)
mf_20$PROV <- as.character(mf_20$PROV)
munics_20 <- munics_20 %>%
  left_join(mf_20[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_SR65_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(SR_65, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
mf_22$MUNICIPIO <- as.character(mf_22$MUNICIPIO)
mf_22$PROV <- as.character(mf_22$PROV)
munics_22 <- munics_22 %>%
  left_join(mf_22[,c("SR_65", "SR_85", "SR_100", "PROV", "MUNICIPIO")],
            by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
lot_SR65_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(SR_65, breaks = breaks_65, labels = labels_65)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_65,
    labels = labels_65,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>65)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_SR65_12, plot_SR65_14, plot_SR65_16, plot_SR65_18, plot_SR65_20, plot_SR65_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","MUNICIPIO", "PROV", "SR_65")
# Function to filter out Inf values and get the largest values
get_largest_sr <- function(df, wanted_cols) {
  df_filtered <- df[is.finite(df$SR_65), ]  # Exclude Inf values
  df_sorted <- df_filtered[order(df_filtered$SR_65, decreasing = TRUE), ]  # Order by SR_65
  head(df_sorted[, wanted_cols], 6)  # Extract the 6 largest values
}
# 2012
largest_12 <- get_largest_sr(mf_12, wanted_cols)
# 2014
largest_14 <- get_largest_sr(mf_14, wanted_cols)
# 2016
largest_16 <- get_largest_sr(mf_16, wanted_cols)
# 2018
largest_18 <- get_largest_sr(mf_18, wanted_cols)
# 2020
largest_20 <- get_largest_sr(mf_20, wanted_cols)
# 2022
largest_22 <- get_largest_sr(mf_22, wanted_cols)
# Combination
largest_SR_65 <- rbind(largest_12, largest_14, largest_16, largest_18, largest_20, largest_22)

### Time series
berceruelo <- c(
  mf_12[mf_12$MUNICIPIO == "Berceruelo", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "Berceruelo", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "Berceruelo", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "Berceruelo", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "Berceruelo", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "Berceruelo", "SR_65"][[1]]
)
bañosdetajo <- c(
  mf_12[mf_12$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "Baños de Tajo", "SR_65"][[1]]
)
retiendas <- c(
  mf_12[mf_12$MUNICIPIO == "Retiendas", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "Retiendas", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "Retiendas", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "Retiendas", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "Retiendas", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "Retiendas", "SR_65"][[1]]
)
abaurrepea <- c(
  mf_12[mf_12$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "Abaurrepea/Abaurrea Baja", "SR_65"][[1]]
)
ledesma <- c(
  mf_12[mf_12$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "Ledesma de la Cogolla", "SR_65"][[1]]
)
mierla <- c(
  mf_12[mf_12$MUNICIPIO == "La Mierla", "SR_65"][[1]],
  mf_14[mf_14$MUNICIPIO == "La Mierla", "SR_65"][[1]],
  mf_16[mf_16$MUNICIPIO == "La Mierla", "SR_65"][[1]],
  mf_18[mf_18$MUNICIPIO == "La Mierla", "SR_65"][[1]],
  mf_20[mf_20$MUNICIPIO == "La Mierla", "SR_65"][[1]],
  mf_22[mf_22$MUNICIPIO == "La Mierla", "SR_65"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Berceruelo = berceruelo,
  Baños_de_Tajo = bañosdetajo,
  Retiendas = retiendas,
  Abaurrepea_Abaurrea_Baja = abaurrepea,
  Ledesma_de_la_Cogolla = ledesma,
  La_Mierla = mierla
)
# TIME SERIES
# Reshape data to long format
data_long <- gather(data_short, key = "Municipality", value = "LocationIndex", -Year)

# Create the plot
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Municipality, group = Municipality)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR(>65)",
       color = "Municipality") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),    
    legend.title = element_text(size = 18)    
  )

######################################################################
# SEX RATIO AGES 85 AND ABOVE (MUNICIPALITIES)
######################################################################

custom_colors_85 <- c("white", "wheat3","salmon2","orange", "darkgreen")
breaks_85 <- c(-0.0001, 40, 60, 100, 200, Inf)  
labels_85 <- c("0% - 40%", "40% - 60%", "60% - 100%","100% - 200%", "> 200%")

plot_SR85_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(SR_85.y, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
plot_SR85_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(SR_85, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
plot_SR85_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(SR_85, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
plot_SR85_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(SR_85, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
plot_SR85_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(SR_85, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
plot_SR85_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(SR_85, breaks = breaks_85, labels = labels_85)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_85,
    labels = labels_85,
    drop = FALSE,
    na.translate = FALSE
  ) +
  labs(
    fill = "SR (>85)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_SR85_12, plot_SR85_14, plot_SR85_16, plot_SR85_18, plot_SR85_20, plot_SR85_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","MUNICIPIO", "PROV", "SR_85")
# Function to filter out Inf values and get the largest values
get_largest_sr <- function(df, wanted_cols) {
  df_filtered <- df[is.finite(df$SR_85), ]  # Exclude Inf values
  df_sorted <- df_filtered[order(df_filtered$SR_85, decreasing = TRUE), ]  # Order by SR_65
  head(df_sorted[, wanted_cols], 6)  # Extract the 6 largest values
}
# 2012
largest_12 <- get_largest_sr(mf_12, wanted_cols)
# 2014
largest_14 <- get_largest_sr(mf_14, wanted_cols)
# 2016
largest_16 <- get_largest_sr(mf_16, wanted_cols)
# 2018
largest_18 <- get_largest_sr(mf_18, wanted_cols)
# 2020
largest_20 <- get_largest_sr(mf_20, wanted_cols)
# 2022
largest_22 <- get_largest_sr(mf_22, wanted_cols)
# Combination
largest_SR_85 <- rbind(largest_12, largest_14, largest_16, largest_18, largest_20, largest_22)
### Time series
benissoda <- c(
  mf_12[mf_12$MUNICIPIO == "Benissoda", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "Benissoda", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "Benissoda", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "Benissoda", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "Benissoda", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "Benissoda", "SR_85"][[1]]
)
alamedadelvalle <- c(
  mf_12[mf_12$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "Alameda del Valle", "SR_85"][[1]]
)
laspaules <- c(
  mf_12[mf_12$MUNICIPIO == "Laspaúles", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "Laspaúles", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "Laspaúles", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "Laspaúles", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "Laspaúles", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "Laspaúles", "SR_85"][[1]]
)
granja <- c(
  mf_12[mf_12$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "la Granja de la Costera", "SR_85"][[1]]
)
barcabo <- c(
  mf_12[mf_12$MUNICIPIO == "Bárcabo", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "Bárcabo", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "Bárcabo", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "Bárcabo", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "Bárcabo", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "Bárcabo", "SR_85"][[1]]
)
altzo <- c(
  mf_12[mf_12$MUNICIPIO == "Altzo", "SR_85"][[1]],
  mf_14[mf_14$MUNICIPIO == "Altzo", "SR_85"][[1]],
  mf_16[mf_16$MUNICIPIO == "Altzo", "SR_85"][[1]],
  mf_18[mf_18$MUNICIPIO == "Altzo", "SR_85"][[1]],
  mf_20[mf_20$MUNICIPIO == "Altzo", "SR_85"][[1]],
  mf_22[mf_22$MUNICIPIO == "Altzo", "SR_85"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Benissoda = benissoda,
  Alameda_del_Valle = alamedadelvalle,
  Laspaúles = laspaules,
  la_Granja_de_la_Costera = granja,
  Bárcabo = barcabo,
  Altzo = altzo
)
# TIME SERIES
data_long <- gather(data_short, key = "Municipality", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Municipality, group = Municipality)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR(>85)",
       color = "Municipality") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),    # Increase the legend text size
    legend.title = element_text(size = 18)    # Increase the legend title size
  )

########################################################################
# SEX RATIO FOR CENTENARIANS (MUNICIPALITIES)
########################################################################

custom_colors_100 <- c("white", "salmon2","orange", "darkgreen")
breaks_100 <- c(-0.0001, 20, 100, 200, Inf)  
labels_100 <- c("0% - 20%", "20% - 100%","100% - 200%", "> 200%")

plot_SR100_12 <- ggplot(munics_12) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
plot_SR100_14 <- ggplot(munics_14) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
plot_SR100_16 <- ggplot(munics_16) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
plot_SR100_18 <- ggplot(munics_18) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
plot_SR100_20 <- ggplot(munics_20) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
plot_SR100_22 <- ggplot(munics_22) +
  geom_sf(aes(fill = cut(SR_100, breaks = breaks_100, labels = labels_100)), alpha = 0.9, color = NA) +
  scale_fill_manual(
    values = custom_colors_100,
    labels = labels_100,
    drop = FALSE
  ) +
  labs(
    fill = "SR (>100)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_SR100_12, plot_SR100_14, plot_SR100_16, plot_SR100_18, plot_SR100_20, plot_SR100_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","MUNICIPIO", "PROV", "SR_100")
# Function to filter out Inf values and get the largest values
get_largest_sr <- function(df, wanted_cols) {
  df_filtered <- df[is.finite(df$SR_100), ]  # Exclude Inf values
  df_sorted <- df_filtered[order(df_filtered$SR_100, decreasing = TRUE), ]  # Order by SR_100
  head(df_sorted[, wanted_cols], 6)  # Extract the 6 largest values
}
# 2012
largest_12 <- get_largest_sr(mf_12, wanted_cols)
# 2014
largest_14 <- get_largest_sr(mf_14, wanted_cols)
# 2016
largest_16 <- get_largest_sr(mf_16, wanted_cols)
# 2018
largest_18 <- get_largest_sr(mf_18, wanted_cols)
# 2020
largest_20 <- get_largest_sr(mf_20, wanted_cols)
# 2022
largest_22 <- get_largest_sr(mf_22, wanted_cols)
# Combination
largest_SR_100 <- rbind(largest_12, largest_14, largest_16, largest_18, largest_20, largest_22)
### Time series
fornelos <- c(
  mf_12[mf_12$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Fornelos de Montes", "SR_100"][[1]]
)
bergondo <- c(
  mf_12[mf_12$MUNICIPIO == "Bergondo", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Bergondo", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Bergondo", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Bergondo", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Bergondo", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Bergondo", "SR_100"][[1]]
)
lossilos <- c(
  mf_12[mf_12$MUNICIPIO == "Los Silos", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Los Silos", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Los Silos", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Los Silos", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Los Silos", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Los Silos", "SR_100"][[1]]
)
cabañas <- c(
  mf_12[mf_12$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Cabañas del Castillo", "SR_100"][[1]]
)
aridane <- c(
  mf_12[mf_12$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Los Llanos de Aridane", "SR_100"][[1]]
)
villanueva <- c(
  mf_12[mf_12$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]],
  mf_14[mf_14$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]],
  mf_16[mf_16$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]],
  mf_18[mf_18$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]],
  mf_20[mf_20$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]],
  mf_22[mf_22$MUNICIPIO == "Villanueva de la Serena", "SR_100"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Fornelos_de_Montes = fornelos,
  Bergondo = bergondo,
  Los_Silos = lossilos,
  Cabañas_del_Castillo = cabañas,
  Los_Llanos_de_Aridane = aridane,
  Villanueva_de_la_Serena = villanueva
)
# TIME SERIES
data_long <- gather(data_short, key = "Municipality", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Municipality, group = Municipality)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR(>100)",
       color = "Municipality") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),    # Increase the legend text size
    legend.title = element_text(size = 18)    # Increase the legend title size
  )

##############################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION (PROVINCES)
##############################################################
# Summarize total inhabitants by province and Year
habs_prov <- data %>%
  group_by(PROV, year) %>%
  summarize(total = sum(Total_habs),
            older_65 = sum(Total_65),
            older_85 = sum(Total_85),
            older_100 = sum(Total_100))
# Print the resulting dataframe
print(habs_prov)
# Compute IL for every year
# 2012
prov_12 <- habs_prov[habs_prov$year==2012,]
total_C12 <- sum(prov_12$older_100)
total12 <- sum(prov_12$total)
prov_12$IL <- (prov_12$older_100/total_C12)/(prov_12$total/total12)
# 2014
prov_14 <- habs_prov[habs_prov$year==2014,]
total_C14 <- sum(prov_14$older_100)
total14 <- sum(prov_14$total)
prov_14$IL <- (prov_14$older_100/total_C14)/(prov_14$total/total14)
# 2016
prov_16 <- habs_prov[habs_prov$year==2016,]
total_C16 <- sum(prov_16$older_100)
total16 <- sum(prov_16$total)
prov_16$IL <- (prov_16$older_100/total_C16)/(prov_16$total/total16)
# 2018
prov_18 <- habs_prov[habs_prov$year==2018,]
total_C18 <- sum(prov_18$older_100)
total18 <- sum(prov_18$total)
prov_18$IL <- (prov_18$older_100/total_C18)/(prov_18$total/total18)
# 2020
prov_20 <- habs_prov[habs_prov$year==2020,]
total_C20 <- sum(prov_20$older_100)
total20 <- sum(prov_20$total)
prov_20$IL <- (prov_20$older_100/total_C20)/(prov_20$total/total20)
# 2022
prov_22 <- habs_prov[habs_prov$year==2022,]
total_C22 <- sum(prov_22$older_100)
total22 <- sum(prov_22$total)
prov_22$IL <- (prov_22$older_100/total_C22)/(prov_22$total/total22)
min_il <- min(c(min(prov_12$IL), min(prov_14$IL),
                min(prov_16$IL), min(prov_18$IL),
                min(prov_20$IL), min(prov_22$IL)))

max_il <- max(c(max(prov_12$IL), max(prov_14$IL),
                max(prov_16$IL), max(prov_18$IL),
                max(prov_20$IL), max(prov_22$IL)))

# We define the limits that we will use in the next plots
limits <- c(min_il, max_il)
breaks <- limits[1] + c(0, 0.25*(limits[2]-limits[1]),
            0.5*(limits[2]-limits[1]),
            0.75*(limits[2]-limits[1]),limits[2]-limits[1])
### 2012
provs_12 <- provs_12 %>%
  left_join(prov_12, by = c("ine.prov.name"="PROV"))
plot_IL_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = IL), alpha =1, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
provs_14 <- provs_14 %>%
  left_join(prov_14, by = c("ine.prov.name"="PROV"))
plot_IL_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = IL), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
provs_16 <- provs_16 %>%
  left_join(prov_16, by = c("ine.prov.name"="PROV"))
plot_IL_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = IL), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
provs_18 <- provs_18 %>%
  left_join(prov_18, by = c("ine.prov.name"="PROV"))
plot_IL_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = IL), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
provs_20 <- provs_20 %>%
  left_join(prov_20, by = c("ine.prov.name"="PROV"))
plot_IL_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = IL), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
provs_22 <- provs_22 %>%
  left_join(prov_22, by = c("ine.prov.name"="PROV"))
plot_IL_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = IL), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks,
    limits = limits,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_IL_12, plot_IL_14, plot_IL_16, plot_IL_18, plot_IL_20, plot_IL_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables 
wanted_cols <- c("year","PROV", "IL")
# 2012
# Order by IL to get the smallest values
prov_12_sorted_asc <- prov_12[order(prov_12$IL), ]
# Extract the 3 smallest values
smallest_12 <- head(prov_12_sorted_asc[,wanted_cols], 3)
# Order by IL to get the largest values
prov_12_sorted_desc <- prov_12[order(prov_12$IL, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(prov_12_sorted_desc[,wanted_cols], 3)
# 2014
prov_14_sorted_asc <- prov_14[order(prov_14$IL), ]
smallest_14 <- head(prov_14_sorted_asc[,wanted_cols], 3)
prov_14_sorted_desc <- prov_14[order(prov_14$IL, decreasing = TRUE), ]
largest_14 <- head(prov_14_sorted_desc[,wanted_cols], 3)
# 2016
prov_16_sorted_asc <- prov_16[order(prov_16$IL), ]
smallest_16 <- head(prov_16_sorted_asc[,wanted_cols], 3)
prov_16_sorted_desc <- prov_16[order(prov_16$IL, decreasing = TRUE), ]
largest_16 <- head(prov_16_sorted_desc[,wanted_cols], 3)
# 2018
prov_18_sorted_asc <- prov_18[order(prov_18$IL), ]
smallest_18 <- head(prov_18_sorted_asc[,wanted_cols], 3)
prov_18_sorted_desc <- prov_18[order(prov_18$IL, decreasing = TRUE), ]
largest_18 <- head(prov_18_sorted_desc[,wanted_cols], 3)
# 2020
prov_20_sorted_asc <- prov_20[order(prov_20$IL), ]
smallest_20 <- head(prov_20_sorted_asc[,wanted_cols], 3)
prov_20_sorted_desc <- prov_20[order(prov_20$IL, decreasing = TRUE), ]
largest_20 <- head(prov_20_sorted_desc[,wanted_cols], 3)
# 2022
prov_22_sorted_asc <- prov_22[order(prov_22$IL), ]
smallest_22 <- head(prov_22_sorted_asc[,wanted_cols], 3)
prov_22_sorted_desc <- prov_22[order(prov_22$IL, decreasing = TRUE), ]
largest_22 <- head(prov_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_IL <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_IL <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_IL <- cbind(largest_IL, smallest_IL[,c("PROV","IL")])
combined_IL
### Time series
ourense <- c(
  prov_12[prov_12$PROV == "Ourense", "IL"][[1]],
  prov_14[prov_14$PROV == "Ourense", "IL"][[1]],
  prov_16[prov_16$PROV == "Ourense", "IL"][[1]],
  prov_18[prov_18$PROV == "Ourense", "IL"][[1]],
  prov_20[prov_20$PROV == "Ourense", "IL"][[1]],
  prov_22[prov_22$PROV == "Ourense", "IL"][[1]]
)
soria <- c(
  prov_12[prov_12$PROV == "Soria", "IL"][[1]],
  prov_14[prov_14$PROV == "Soria", "IL"][[1]],
  prov_16[prov_16$PROV == "Soria", "IL"][[1]],
  prov_18[prov_18$PROV == "Soria", "IL"][[1]],
  prov_20[prov_20$PROV == "Soria", "IL"][[1]],
  prov_22[prov_22$PROV == "Soria", "IL"][[1]]
)

salamanca <- c(
  prov_12[prov_12$PROV == "Salamanca", "IL"][[1]],
  prov_14[prov_14$PROV == "Salamanca", "IL"][[1]],
  prov_16[prov_16$PROV == "Salamanca", "IL"][[1]],
  prov_18[prov_18$PROV == "Salamanca", "IL"][[1]],
  prov_20[prov_20$PROV == "Salamanca", "IL"][[1]],
  prov_22[prov_22$PROV == "Salamanca", "IL"][[1]]
)
cadiz <- c(
  prov_12[prov_12$PROV=="Cadiz","IL"][[1]], 
  prov_14[prov_14$PROV=="Cadiz","IL"][[1]], 
  prov_16[prov_16$PROV=="Cadiz","IL"][[1]], 
  prov_18[prov_18$PROV=="Cadiz","IL"][[1]], 
  prov_20[prov_20$PROV=="Cadiz","IL"][[1]], 
  prov_22[prov_22$PROV=="Cadiz","IL"][[1]]
  )
ceuta <- c(
  prov_12[prov_12$PROV=="Ceuta","IL"][[1]], 
  prov_14[prov_14$PROV=="Ceuta","IL"][[1]], 
  prov_16[prov_16$PROV=="Ceuta","IL"][[1]], 
  prov_18[prov_18$PROV=="Ceuta","IL"][[1]], 
  prov_20[prov_20$PROV=="Ceuta","IL"][[1]], 
  prov_22[prov_22$PROV=="Ceuta","IL"][[1]]
  )
melilla <- c(
  prov_12[prov_12$PROV=="Melilla","IL"][[1]], 
  prov_14[prov_14$PROV=="Melilla","IL"][[1]], 
  prov_16[prov_16$PROV=="Melilla","IL"][[1]], 
  prov_18[prov_18$PROV=="Melilla","IL"][[1]], 
  prov_20[prov_20$PROV=="Melilla","IL"][[1]], 
  prov_22[prov_22$PROV=="Melilla","IL"][[1]]
  )
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Ourense = ourense,
  Soria = soria,
  Salamanca = salamanca,
  Cadiz = cadiz,
  Ceuta = ceuta,
  Melilla = melilla
)
# TIME SERIES
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "IL",
       color = "Province")  +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

############################################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION AGES 65 AND ABOVE (PROVINCES)
############################################################################

# 2012
total_S12 <- sum(prov_12$older_65)
prov_12$IL2 <- (prov_12$older_100/total_C12)/(prov_12$older_65/total_S12)
# 2014
total_S14 <- sum(prov_14$older_65)
prov_14$IL2 <- (prov_14$older_100/total_C14)/(prov_14$older_65/total_S14)
# 2016
total_S16 <- sum(prov_16$older_65)
prov_16$IL2 <- (prov_16$older_100/total_C16)/(prov_16$older_65/total_S16)
# 2018
total_S18 <- sum(prov_18$older_65)
prov_18$IL2 <- (prov_18$older_100/total_C18)/(prov_18$older_65/total_S18)
# 2020
total_S20 <- sum(prov_20$older_65)
prov_20$IL2 <- (prov_20$older_100/total_C20)/(prov_20$older_65/total_S20)
# 2022
total_S22 <- sum(prov_22$older_65)
prov_22$IL2 <- (prov_22$older_100/total_C22)/(prov_22$older_65/total_S22)

min_il2 <- min(c(min(prov_12$IL2), min(prov_14$IL2),
                min(prov_16$IL2), min(prov_18$IL2),
                min(prov_20$IL2), min(prov_22$IL2)))

max_il2 <- max(c(max(prov_12$IL2), max(prov_14$IL2),
                max(prov_16$IL2), max(prov_18$IL2),
                max(prov_20$IL2), max(prov_22$IL2)))

# We define the limits that we will use in the next plots
limits2 <- c(min_il2, max_il2)
breaks2 <- limits2[1]+c(0, 0.25*(limits2[2]-limits2[1]),
            0.5*(limits2[2]-limits2[1]),
            0.75*(limits2[2]-limits2[1]),limits2[2]-limits2[1])
### 2012
provs_12 <- provs_12 %>%
  left_join(prov_12[,c("IL2","PROV")],
            by = c("ine.prov.name"="PROV"))

plot_IL2_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
provs_14 <- provs_14 %>%
  left_join(prov_14[,c("IL2","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL2_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
# Plot IL2 2016
provs_16 <- provs_16 %>%
  left_join(prov_16[,c("IL2","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL2_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
# Plot IL2 2018
provs_18 <- provs_18 %>%
  left_join(prov_18[,c("IL2","PROV")],
            by = c("ine.prov.name"="PROV"))

plot_IL2_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Plot IL2 2020
provs_20 <- provs_20 %>%
  left_join(prov_20[,c("IL2","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL2_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
provs_22 <- provs_22 %>%
  left_join(prov_22[,c("IL2","PROV")],
            by = c("ine.prov.name"="PROV"))

plot_IL2_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = IL2), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks2,
    limits = limits2,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>65)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange(plot_IL2_12, plot_IL2_14, plot_IL2_16, plot_IL2_18, plot_IL2_20, plot_IL2_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","PROV","IL2")
# 2012
# Order by IL to get the smallest values
prov_12_sorted_asc <- prov_12[order(prov_12$IL2), ]
# Extract the 3 smallest values
smallest_12 <- head(prov_12_sorted_asc[,wanted_cols], 3)
# Order by IL to get the largest values
prov_12_sorted_desc <- prov_12[order(prov_12$IL2, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(prov_12_sorted_desc[,wanted_cols], 3)
# Repeat the same for the remaining years and combine the dataframes conveniently
# 2014
prov_14_sorted_asc <- prov_14[order(prov_14$IL2), ]
smallest_14 <- head(prov_14_sorted_asc[,wanted_cols], 3)
prov_14_sorted_desc <- prov_14[order(prov_14$IL2, decreasing = TRUE), ]
largest_14 <- head(prov_14_sorted_desc[,wanted_cols], 3)
# 2016
prov_16_sorted_asc <- prov_16[order(prov_16$IL2), ]
smallest_16 <- head(prov_16_sorted_asc[,wanted_cols], 3)
prov_16_sorted_desc <- prov_16[order(prov_16$IL2, decreasing = TRUE), ]
largest_16 <- head(prov_16_sorted_desc[,wanted_cols], 3)
# 2018
prov_18_sorted_asc <- prov_18[order(prov_18$IL2), ]
smallest_18 <- head(prov_18_sorted_asc[,wanted_cols], 3)
prov_18_sorted_desc <- prov_18[order(prov_18$IL2, decreasing = TRUE), ]
largest_18 <- head(prov_18_sorted_desc[,wanted_cols], 3)
# 2020
prov_20_sorted_asc <- prov_20[order(prov_20$IL2), ]
smallest_20 <- head(prov_20_sorted_asc[,wanted_cols], 3)
prov_20_sorted_desc <- prov_20[order(prov_20$IL2, decreasing = TRUE), ]
largest_20 <- head(prov_20_sorted_desc[,wanted_cols], 3)
# 2022
prov_22_sorted_asc <- prov_22[order(prov_22$IL2), ]
smallest_22 <- head(prov_22_sorted_asc[,wanted_cols], 3)
prov_22_sorted_desc <- prov_22[order(prov_22$IL2, decreasing = TRUE), ]
largest_22 <- head(prov_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_IL2 <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_IL2 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_IL2 <- cbind(largest_IL2, smallest_IL2[,c("PROV","IL2")])
combined_IL2
### Time series
ourense <- c(
  prov_12[prov_12$PROV == "Ourense", "IL2"][[1]],
  prov_14[prov_14$PROV == "Ourense", "IL2"][[1]],
  prov_16[prov_16$PROV == "Ourense", "IL2"][[1]],
  prov_18[prov_18$PROV == "Ourense", "IL2"][[1]],
  prov_20[prov_20$PROV == "Ourense", "IL2"][[1]],
  prov_22[prov_22$PROV == "Ourense", "IL2"][[1]]
)
soria <- c(
  prov_12[prov_12$PROV == "Soria", "IL2"][[1]],
  prov_14[prov_14$PROV == "Soria", "IL2"][[1]],
  prov_16[prov_16$PROV == "Soria", "IL2"][[1]],
  prov_18[prov_18$PROV == "Soria", "IL2"][[1]],
  prov_20[prov_20$PROV == "Soria", "IL2"][[1]],
  prov_22[prov_22$PROV == "Soria", "IL2"][[1]]
)

salamanca <- c(
  prov_12[prov_12$PROV == "Salamanca", "IL2"][[1]],
  prov_14[prov_14$PROV == "Salamanca", "IL2"][[1]],
  prov_16[prov_16$PROV == "Salamanca", "IL2"][[1]],
  prov_18[prov_18$PROV == "Salamanca", "IL2"][[1]],
  prov_20[prov_20$PROV == "Salamanca", "IL2"][[1]],
  prov_22[prov_22$PROV == "Salamanca", "IL2"][[1]]
)
cadiz <- c(
  prov_12[prov_12$PROV=="Cadiz","IL2"][[1]], 
  prov_14[prov_14$PROV=="Cadiz","IL2"][[1]], 
  prov_16[prov_16$PROV=="Cadiz","IL2"][[1]], 
  prov_18[prov_18$PROV=="Cadiz","IL2"][[1]], 
  prov_20[prov_20$PROV=="Cadiz","IL2"][[1]], 
  prov_22[prov_22$PROV=="Cadiz","IL2"][[1]]
  )
murcia <- c(
  prov_12[prov_12$PROV=="Murcia","IL2"][[1]], 
  prov_14[prov_14$PROV=="Murcia","IL2"][[1]], 
  prov_16[prov_16$PROV=="Murcia","IL2"][[1]], 
  prov_18[prov_18$PROV=="Murcia","IL2"][[1]], 
  prov_20[prov_20$PROV=="Murcia","IL2"][[1]], 
  prov_22[prov_22$PROV=="Murcia","IL2"][[1]]
  )
badajoz <- c(
  prov_12[prov_12$PROV=="Badajoz","IL2"][[1]], 
  prov_14[prov_14$PROV=="Badajoz","IL2"][[1]], 
  prov_16[prov_16$PROV=="Badajoz","IL2"][[1]], 
  prov_18[prov_18$PROV=="Badajoz","IL2"][[1]], 
  prov_20[prov_20$PROV=="Badajoz","IL2"][[1]], 
  prov_22[prov_22$PROV=="Badajoz","IL2"][[1]]
  )
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Ourense = ourense,
  Soria = soria,
  Salamanca = salamanca,
  Cadiz = cadiz,
  Badajoz = badajoz,
  Murcia = murcia
)
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "IL (>65)",
       color = "Province") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

############################################################################
# LOCATION INDEX OF THE CENTENARIAN POPULATION AGES 85 AND ABOVE (PROVINCES)
############################################################################

# 2012
total_O12 <- sum(prov_12$older_85)
prov_12$IL3 <- (prov_12$older_100/total_C12)/(prov_12$older_85/total_O12)
# 2014
total_O14 <- sum(prov_14$older_85)
prov_14$IL3 <- (prov_14$older_100/total_C14)/(prov_14$older_85/total_O14)
# 2016
total_O16 <- sum(prov_16$older_85)
prov_16$IL3 <- (prov_16$older_100/total_C16)/(prov_16$older_85/total_O16)
# 2018
total_O18 <- sum(prov_18$older_85)
prov_18$IL3 <- (prov_18$older_100/total_C18)/(prov_18$older_85/total_O18)
# 2020
total_O20 <- sum(prov_20$older_85)
prov_20$IL3 <- (prov_20$older_100/total_C20)/(prov_20$older_85/total_O20)
# 2022
total_O22 <- sum(prov_22$older_85)
prov_22$IL3 <- (prov_22$older_100/total_C22)/(prov_22$older_85/total_O22)
min_il3 <- min(c(min(prov_12$IL3), min(prov_14$IL3),
                min(prov_16$IL3), min(prov_18$IL3),
                min(prov_20$IL3), min(prov_22$IL3)))

max_il3 <- max(c(max(prov_12$IL3), max(prov_14$IL3),
                max(prov_16$IL3), max(prov_18$IL3),
                max(prov_20$IL3), max(prov_22$IL3)))

# We define the limits that we will use in the next plots
limits3 <- c(min_il3, max_il3)
breaks3 <- limits3[1]+c(0, 0.25*(limits3[2]-limits3[1]),
            0.5*(limits3[2]-limits3[1]),
            0.75*(limits3[2]-limits3[1]),limits3[2]-limits3[1])
### 2012
provs_12 <- provs_12 %>%
  left_join(prov_12[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
provs_14 <- provs_14 %>%
  left_join(prov_14[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
provs_16 <- provs_16 %>%
  left_join(prov_16[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
provs_18 <- provs_18 %>%
  left_join(prov_18[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
provs_20 <- provs_20 %>%
  left_join(prov_20[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
provs_22 <- provs_22 %>%
  left_join(prov_22[,c("IL3","PROV")], 
            by = c("ine.prov.name"="PROV"))

plot_IL3_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = IL3), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks3,
    limits = limits3,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "IL(>85)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange(plot_IL3_12, plot_IL3_14, plot_IL3_16, plot_IL3_18, plot_IL3_20, plot_IL3_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","PROV","IL3")
# 2012
# Order by IL to get the smallest values
prov_12_sorted_asc <- prov_12[order(prov_12$IL3), ]
# Extract the 3 smallest values
smallest_12 <- head(prov_12_sorted_asc[,wanted_cols], 3)
# Order by IL to get the largest values
prov_12_sorted_desc <- prov_12[order(prov_12$IL3, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(prov_12_sorted_desc[,wanted_cols], 3)
# 2014
prov_14_sorted_asc <- prov_14[order(prov_14$IL3), ]
smallest_14 <- head(prov_14_sorted_asc[,wanted_cols], 3)
prov_14_sorted_desc <- prov_14[order(prov_14$IL3, decreasing = TRUE), ]
largest_14 <- head(prov_14_sorted_desc[,wanted_cols], 3)
# 2016
prov_16_sorted_asc <- prov_16[order(prov_16$IL3), ]
smallest_16 <- head(prov_16_sorted_asc[,wanted_cols], 3)
prov_16_sorted_desc <- prov_16[order(prov_16$IL3, decreasing = TRUE), ]
largest_16 <- head(prov_16_sorted_desc[,wanted_cols], 3)
# 2018
prov_18_sorted_asc <- prov_18[order(prov_18$IL3), ]
smallest_18 <- head(prov_18_sorted_asc[,wanted_cols], 3)
prov_18_sorted_desc <- prov_18[order(prov_18$IL3, decreasing = TRUE), ]
largest_18 <- head(prov_18_sorted_desc[,wanted_cols], 3)
# 2020
prov_20_sorted_asc <- prov_20[order(prov_20$IL3), ]
smallest_20 <- head(prov_20_sorted_asc[,wanted_cols], 3)
prov_20_sorted_desc <- prov_20[order(prov_20$IL3, decreasing = TRUE), ]
largest_20 <- head(prov_20_sorted_desc[,wanted_cols], 3)
# 2022
prov_22_sorted_asc <- prov_22[order(prov_22$IL3), ]
smallest_22 <- head(prov_22_sorted_asc[,wanted_cols], 3)
prov_22_sorted_desc <- prov_22[order(prov_22$IL3, decreasing = TRUE), ]
largest_22 <- head(prov_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_IL3 <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_IL3 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_IL3 <- cbind(largest_IL3, smallest_IL3[,c("PROV","IL3")])
combined_IL3

### Time series
tenerife <- c(
  prov_12[prov_12$PROV == "Tenerife", "IL3"][[1]],
  prov_14[prov_14$PROV == "Tenerife", "IL3"][[1]],
  prov_16[prov_16$PROV == "Tenerife", "IL3"][[1]],
  prov_18[prov_18$PROV == "Tenerife", "IL3"][[1]],
  prov_20[prov_20$PROV == "Tenerife", "IL3"][[1]],
  prov_22[prov_22$PROV == "Tenerife", "IL3"][[1]]
)
malaga <- c(
  prov_12[prov_12$PROV == "Malaga", "IL3"][[1]],
  prov_14[prov_14$PROV == "Malaga", "IL3"][[1]],
  prov_16[prov_16$PROV == "Malaga", "IL3"][[1]],
  prov_18[prov_18$PROV == "Malaga", "IL3"][[1]],
  prov_20[prov_20$PROV == "Malaga", "IL3"][[1]],
  prov_22[prov_22$PROV == "Malaga", "IL3"][[1]]
)

melilla <- c(
  prov_12[prov_12$PROV == "Melilla", "IL3"][[1]],
  prov_14[prov_14$PROV == "Melilla", "IL3"][[1]],
  prov_16[prov_16$PROV == "Melilla", "IL3"][[1]],
  prov_18[prov_18$PROV == "Melilla", "IL3"][[1]],
  prov_20[prov_20$PROV == "Melilla", "IL3"][[1]],
  prov_22[prov_22$PROV == "Melilla", "IL3"][[1]]
)
jaen <- c(
  prov_12[prov_12$PROV=="Jaen","IL3"][[1]], 
  prov_14[prov_14$PROV=="Jaen","IL3"][[1]], 
  prov_16[prov_16$PROV=="Jaen","IL3"][[1]], 
  prov_18[prov_18$PROV=="Jaen","IL3"][[1]], 
  prov_20[prov_20$PROV=="Jaen","IL3"][[1]], 
  prov_22[prov_22$PROV=="Jaen","IL3"][[1]]
  )
murcia <- c(
  prov_12[prov_12$PROV=="Murcia","IL3"][[1]], 
  prov_14[prov_14$PROV=="Murcia","IL3"][[1]], 
  prov_16[prov_16$PROV=="Murcia","IL3"][[1]], 
  prov_18[prov_18$PROV=="Murcia","IL3"][[1]], 
  prov_20[prov_20$PROV=="Murcia","IL3"][[1]], 
  prov_22[prov_22$PROV=="Murcia","IL3"][[1]]
  )
badajoz <- c(
  prov_12[prov_12$PROV=="Badajoz","IL3"][[1]], 
  prov_14[prov_14$PROV=="Badajoz","IL3"][[1]], 
  prov_16[prov_16$PROV=="Badajoz","IL3"][[1]], 
  prov_18[prov_18$PROV=="Badajoz","IL3"][[1]], 
  prov_20[prov_20$PROV=="Badajoz","IL3"][[1]], 
  prov_22[prov_22$PROV=="Badajoz","IL3"][[1]]
  )
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Tenerife = tenerife,
  Malaga = malaga,
  Murcia = murcia,
  Badajoz = badajoz,
  Jaen = jaen,
  Melilla = melilla
)
# TIME SERIES
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "IL (>85)",
       color = "Province") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

##########################################################
# SEX RATIO AGES 65 AND ABOVE (PROVINCES)
##########################################################
# Summarize by province and Year
mf_prov <- data %>%
  group_by(PROV, year) %>%
  summarize(olderm_65 = sum(Totalm_65),
            olderf_65 = sum(Totalf_65),
            olderm_85 = sum(Totalm_85),
            olderf_85 = sum(Totalf_85),
            olderm_100 = sum(m_100),
            olderf_100 = sum(f_100))

# Print the resulting dataframe
print(mf_prov)

# Compute SEX RATIO for every year
# 2012
mf_12 <- mf_prov[mf_prov$year==2012,]
mf_12$SR_65 <- mf_12$olderm_65/mf_12$olderf_65*100
mf_12$SR_85 <- mf_12$olderm_85/mf_12$olderf_85*100
mf_12$SR_100 <- mf_12$olderm_100/mf_12$olderf_100*100
# 2014
mf_14 <- mf_prov[mf_prov$year==2014,]
mf_14$SR_65 <- mf_14$olderm_65/mf_14$olderf_65*100
mf_14$SR_85 <- mf_14$olderm_85/mf_14$olderf_85*100
mf_14$SR_100 <- mf_14$olderm_100/mf_14$olderf_100*100
# 2016
mf_16 <- mf_prov[mf_prov$year==2016,]
mf_16$SR_65 <- mf_16$olderm_65/mf_16$olderf_65*100
mf_16$SR_85 <- mf_16$olderm_85/mf_16$olderf_85*100
mf_16$SR_100 <- mf_16$olderm_100/mf_16$olderf_100*100
# 2018
mf_18 <- mf_prov[mf_prov$year==2018,]
mf_18$SR_65 <- mf_18$olderm_65/mf_18$olderf_65*100
mf_18$SR_85 <- mf_18$olderm_85/mf_18$olderf_85*100
mf_18$SR_100 <- mf_18$olderm_100/mf_18$olderf_100*100
# 2020
mf_20 <- mf_prov[mf_prov$year==2020,]
mf_20$SR_65 <- mf_20$olderm_65/mf_20$olderf_65*100
mf_20$SR_85 <- mf_20$olderm_85/mf_20$olderf_85*100
mf_20$SR_100 <- mf_20$olderm_100/mf_20$olderf_100*100
# 2022
mf_22 <- mf_prov[mf_prov$year==2022,]
mf_22$SR_65 <- mf_22$olderm_65/mf_22$olderf_65*100
mf_22$SR_85 <- mf_22$olderm_85/mf_22$olderf_85*100
mf_22$SR_100 <- mf_22$olderm_100/mf_22$olderf_100*100
min_SR_65 <- min(c(min(mf_12$SR_65), min(mf_14$SR_65),
                min(mf_16$SR_65), min(mf_18$SR_65),
                min(mf_20$SR_65), min(mf_22$SR_65)))

max_SR_65 <- max(c(max(mf_12$SR_65), max(mf_14$SR_65),
                max(mf_16$SR_65), max(mf_18$SR_65),
                max(mf_20$SR_65), max(mf_22$SR_65)))

min_SR_85 <- min(c(min(mf_12$SR_85), min(mf_14$SR_85),
                min(mf_16$SR_85), min(mf_18$SR_85),
                min(mf_20$SR_85), min(mf_22$SR_85)))

max_SR_85 <- max(c(max(mf_12$SR_85), max(mf_14$SR_85),
                max(mf_16$SR_85), max(mf_18$SR_85),
                max(mf_20$SR_85), max(mf_22$SR_85)))

min_SR_100 <- min(c(min(mf_12$SR_100), min(mf_14$SR_100),
                min(mf_16$SR_100), min(mf_18$SR_100),
                min(mf_20$SR_100), min(mf_22$SR_100)))

max_SR_100 <- max(c(max(mf_12$SR_100), max(mf_14$SR_100),
                max(mf_16$SR_100), max(mf_18$SR_100),
                max(mf_20$SR_100), max(mf_22$SR_100)))
# We define the limits that we will use in the next plots
limits_65 <- c(min_SR_65, max_SR_65)
breaks_65 <- limits_65[1] + c(0, 0.25*(limits_65[2]-limits_65[1]),
            0.5*(limits_65[2]-limits_65[1]),
            0.75*(limits_65[2]-limits_65[1]),limits_65[2]-limits_65[1])

limits_85 <- c(min_SR_85, max_SR_85)
breaks_85 <- limits_85[1] + c(0, 0.25*(limits_85[2]-limits_85[1]),
            0.5*(limits_85[2]-limits_85[1]),
            0.75*(limits_85[2]-limits_85[1]),limits_85[2]-limits_85[1])

limits_100 <- c(min_SR_100, max_SR_100)
breaks_100 <- limits_100[1] + c(0, 0.25*(limits_100[2]-limits_100[1]),
            0.5*(limits_100[2]-limits_100[1]),
            0.75*(limits_100[2]-limits_100[1]),limits_100[2]-limits_100[1])

### 2012
provs_12 <- provs_12 %>%
  left_join(mf_12, by = c("ine.prov.name"="PROV"))
plot_SR65_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
provs_14 <- provs_14 %>%
  left_join(mf_14, by = c("ine.prov.name"="PROV"))
plot_SR65_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
provs_16 <- provs_16 %>%
  left_join(mf_16, by = c("ine.prov.name"="PROV"))
plot_SR65_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2016") +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
provs_18 <- provs_18 %>%
  left_join(mf_18, by = c("ine.prov.name"="PROV"))

# At this point, we are ready to plot the SR of each province
plot_SR65_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
provs_20 <- provs_20 %>%
  left_join(mf_20, by = c("ine.prov.name"="PROV"))
plot_SR65_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
provs_22 <- provs_22 %>%
  left_join(mf_22, by = c("ine.prov.name"="PROV"))
plot_SR65_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = SR_65), alpha = 0.9, color = NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_65,
    limits = limits_65,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>65)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange(plot_SR65_12, plot_SR65_14, plot_SR65_16, plot_SR65_18, plot_SR65_20, plot_SR65_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))

### Tables
wanted_cols <- c("year","PROV", "SR_65")
# 2012
# Order by SR_65 to get the smallest values
mf_12_sorted_asc <- mf_12[order(mf_12$SR_65), ]
# Extract the 3 smallest values
smallest_12 <- head(mf_12_sorted_asc[,wanted_cols], 3)
# Order by SR_65 to get the largest values
mf_12_sorted_desc <- mf_12[order(mf_12$SR_65, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(mf_12_sorted_desc[,wanted_cols], 3)
# 2014
mf_14_sorted_asc <- mf_14[order(mf_14$SR_65), ]
smallest_14 <- head(mf_14_sorted_asc[,wanted_cols], 3)
mf_14_sorted_desc <- mf_14[order(mf_14$SR_65, decreasing = TRUE), ]
largest_14 <- head(mf_14_sorted_desc[,wanted_cols], 3)
# 2016
mf_16_sorted_asc <- mf_16[order(mf_16$SR_65), ]
smallest_16 <- head(mf_16_sorted_asc[,wanted_cols], 3)
mf_16_sorted_desc <- mf_16[order(mf_16$SR_65, decreasing = TRUE), ]
largest_16 <- head(mf_16_sorted_desc[,wanted_cols], 3)
# 2018
mf_18_sorted_asc <- mf_18[order(mf_18$SR_65), ]
smallest_18 <- head(mf_18_sorted_asc[,wanted_cols], 3)
mf_18_sorted_desc <- mf_18[order(mf_18$SR_65, decreasing = TRUE), ]
largest_18 <- head(mf_18_sorted_desc[,wanted_cols], 3)
# 2020
mf_20_sorted_asc <- mf_20[order(mf_20$SR_65), ]
smallest_20 <- head(mf_20_sorted_asc[,wanted_cols], 3)
mf_20_sorted_desc <- mf_20[order(mf_20$SR_65, decreasing = TRUE), ]
largest_20 <- head(mf_20_sorted_desc[,wanted_cols], 3)
# 2022
mf_22_sorted_asc <- mf_22[order(mf_22$SR_65), ]
smallest_22 <- head(mf_22_sorted_asc[,wanted_cols], 3)
mf_22_sorted_desc <- mf_22[order(mf_22$SR_65, decreasing = TRUE), ]
largest_22 <- head(mf_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_SR_65 <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_SR_65 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_SR_65 <- cbind(largest_SR_65, smallest_SR_65[,c("PROV","SR_65")])
combined_SR_65

### Time series
teruel <- c(
  mf_12[mf_12$PROV == "Teruel", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Teruel", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Teruel", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Teruel", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Teruel", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Teruel", "SR_65"][[1]]
)
alava <- c(
  mf_12[mf_12$PROV == "Alava", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Alava", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Alava", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Alava", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Alava", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Alava", "SR_65"][[1]]
)
avila <- c(
  mf_12[mf_12$PROV == "Avila", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Avila", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Avila", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Avila", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Avila", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Avila", "SR_65"][[1]]
)
madrid <- c(
  mf_12[mf_12$PROV == "Madrid", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Madrid", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Madrid", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Madrid", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Madrid", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Madrid", "SR_65"][[1]]
)
bizkaia <- c(
  mf_12[mf_12$PROV == "Bizkaia", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Bizkaia", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Bizkaia", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Bizkaia", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Bizkaia", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Bizkaia", "SR_65"][[1]]
)
asturias <- c(
  mf_12[mf_12$PROV == "Asturias", "SR_65"][[1]],
  mf_14[mf_14$PROV == "Asturias", "SR_65"][[1]],
  mf_16[mf_16$PROV == "Asturias", "SR_65"][[1]],
  mf_18[mf_18$PROV == "Asturias", "SR_65"][[1]],
  mf_20[mf_20$PROV == "Asturias", "SR_65"][[1]],
  mf_22[mf_22$PROV == "Asturias", "SR_65"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Teruel = teruel,
  Alava = alava,
  Avila = avila,
  Madrid = madrid,
  Bizkaia = bizkaia,
  Asturias = asturias
)
# TIME SERIES
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR (>65)",
       color = "Province") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

#####################################################
# SEX RATIO AGES 85 AND ABOVE (PROVINCES)
#####################################################

### 2012
plot_SR85_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
plot_SR85_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
plot_SR85_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
plot_SR85_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
plot_SR85_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
plot_SR85_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = SR_85), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_85,
    limits = limits_85,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>85)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_SR85_12, plot_SR85_14, plot_SR85_16, plot_SR85_18, plot_SR85_20, plot_SR85_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","PROV", "SR_85")
# 2012
# Order by SR_85 to get the smallest values
mf_12_sorted_asc <- mf_12[order(mf_12$SR_85), ]
# Extract the 3 smallest values
smallest_12 <- head(mf_12_sorted_asc[,wanted_cols], 3)
# Order by SR_85 to get the largest values
mf_12_sorted_desc <- mf_12[order(mf_12$SR_85, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(mf_12_sorted_desc[,wanted_cols], 3)
# 2014
mf_14_sorted_asc <- mf_14[order(mf_14$SR_85), ]
smallest_14 <- head(mf_14_sorted_asc[,wanted_cols], 3)
mf_14_sorted_desc <- mf_14[order(mf_14$SR_85, decreasing = TRUE), ]
largest_14 <- head(mf_14_sorted_desc[,wanted_cols], 3)
# 2016
mf_16_sorted_asc <- mf_16[order(mf_16$SR_85), ]
smallest_16 <- head(mf_16_sorted_asc[,wanted_cols], 3)
mf_16_sorted_desc <- mf_16[order(mf_16$SR_85, decreasing = TRUE), ]
largest_16 <- head(mf_16_sorted_desc[,wanted_cols], 3)
# 2018
mf_18_sorted_asc <- mf_18[order(mf_18$SR_85), ]
smallest_18 <- head(mf_18_sorted_asc[,wanted_cols], 3)
mf_18_sorted_desc <- mf_18[order(mf_18$SR_85, decreasing = TRUE), ]
largest_18 <- head(mf_18_sorted_desc[,wanted_cols], 3)
# 2020
mf_20_sorted_asc <- mf_20[order(mf_20$SR_85), ]
smallest_20 <- head(mf_20_sorted_asc[,wanted_cols], 3)
mf_20_sorted_desc <- mf_20[order(mf_20$SR_85, decreasing = TRUE), ]
largest_20 <- head(mf_20_sorted_desc[,wanted_cols], 3)
# 2022
mf_22_sorted_asc <- mf_22[order(mf_22$SR_85), ]
smallest_22 <- head(mf_22_sorted_asc[,wanted_cols], 3)
mf_22_sorted_desc <- mf_22[order(mf_22$SR_85, decreasing = TRUE), ]
largest_22 <- head(mf_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_SR_85 <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_SR_85 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_SR_85 <- cbind(largest_SR_85, smallest_SR_85[,c("PROV","SR_85")])
combined_SR_85
### Time series
teruel <- c(
  mf_12[mf_12$PROV == "Teruel", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Teruel", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Teruel", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Teruel", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Teruel", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Teruel", "SR_85"][[1]]
)
alava <- c(
  mf_12[mf_12$PROV == "Alava", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Alava", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Alava", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Alava", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Alava", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Alava", "SR_85"][[1]]
)
cuenca <- c(
  mf_12[mf_12$PROV == "Cuenca", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Cuenca", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Cuenca", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Cuenca", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Cuenca", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Cuenca", "SR_85"][[1]]
)
melilla <- c(
  mf_12[mf_12$PROV == "Melilla", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Melilla", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Melilla", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Melilla", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Melilla", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Melilla", "SR_85"][[1]]
)
gipuzkoa <- c(
  mf_12[mf_12$PROV == "Gipuzkoa", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Gipuzkoa", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Gipuzkoa", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Gipuzkoa", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Gipuzkoa", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Gipuzkoa", "SR_85"][[1]]
)
sevilla <- c(
  mf_12[mf_12$PROV == "Sevilla", "SR_85"][[1]],
  mf_14[mf_14$PROV == "Sevilla", "SR_85"][[1]],
  mf_16[mf_16$PROV == "Sevilla", "SR_85"][[1]],
  mf_18[mf_18$PROV == "Sevilla", "SR_85"][[1]],
  mf_20[mf_20$PROV == "Sevilla", "SR_85"][[1]],
  mf_22[mf_22$PROV == "Sevilla", "SR_85"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Teruel = teruel,
  Alava = alava,
  Cuenca = cuenca,
  Melilla = melilla,
  Gipuzkoa = gipuzkoa,
  Sevilla = sevilla
)
# TIME SERIES
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR (>85)",
       color = "Province")+
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

########################################################
# SEX RATIO FOR CENTENARIANS (PROVINCES)
########################################################

### 2012
plot_SR100_12 <- ggplot(provs_12) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2014
plot_SR100_14 <- ggplot(provs_14) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2016
plot_SR100_16 <- ggplot(provs_16) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2018
plot_SR100_18 <- ggplot(provs_18) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2020
plot_SR100_20 <- ggplot(provs_20) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
### 2022
plot_SR100_22 <- ggplot(provs_22) +
  geom_sf(aes(fill = SR_100), alpha = 0.9, color=NA) +
  scale_fill_gradientn(
    colors = hcl.colors(100, "Red-Green"),
    breaks = breaks_100,
    limits = limits_100,
    labels = scales::label_comma(),
    guide = guide_legend()
  ) +
  labs(
    fill = "SR (>100)",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect("grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = .5),
    plot.subtitle = element_text(hjust = .5)
  )
# Combine all the plots
grid.arrange( plot_SR100_12, plot_SR100_14, plot_SR100_16, plot_SR100_18, plot_SR100_20, plot_SR100_22, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))
### Tables
wanted_cols <- c("year","PROV", "SR_100")
# 2012
# Order by SR_100 to get the smallest values
mf_12_sorted_asc <- mf_12[order(mf_12$SR_100), ]
# Extract the 3 smallest values
smallest_12 <- head(mf_12_sorted_asc[,wanted_cols], 3)
# Order by SR_100 to get the largest values
mf_12_sorted_desc <- mf_12[order(mf_12$SR_100, decreasing = TRUE), ]
# Extract the 3 largest values
largest_12 <- head(mf_12_sorted_desc[,wanted_cols], 3)
# 2014
mf_14_sorted_asc <- mf_14[order(mf_14$SR_100), ]
smallest_14 <- head(mf_14_sorted_asc[,wanted_cols], 3)
mf_14_sorted_desc <- mf_14[order(mf_14$SR_100, decreasing = TRUE), ]
largest_14 <- head(mf_14_sorted_desc[,wanted_cols], 3)
# 2016
mf_16_sorted_asc <- mf_16[order(mf_16$SR_100), ]
smallest_16 <- head(mf_16_sorted_asc[,wanted_cols], 3)
mf_16_sorted_desc <- mf_16[order(mf_16$SR_100, decreasing = TRUE), ]
largest_16 <- head(mf_16_sorted_desc[,wanted_cols], 3)
# 2018
mf_18_sorted_asc <- mf_18[order(mf_18$SR_100), ]
smallest_18 <- head(mf_18_sorted_asc[,wanted_cols], 3)
mf_18_sorted_desc <- mf_18[order(mf_18$SR_100, decreasing = TRUE), ]
largest_18 <- head(mf_18_sorted_desc[,wanted_cols], 3)
# 2020
mf_20_sorted_asc <- mf_20[order(mf_20$SR_100), ]
smallest_20 <- head(mf_20_sorted_asc[,wanted_cols], 3)
mf_20_sorted_desc <- mf_20[order(mf_20$SR_100, decreasing = TRUE), ]
largest_20 <- head(mf_20_sorted_desc[,wanted_cols], 3)
# 2022
mf_22_sorted_asc <- mf_22[order(mf_22$SR_100), ]
smallest_22 <- head(mf_22_sorted_asc[,wanted_cols], 3)
mf_22_sorted_desc <- mf_22[order(mf_22$SR_100, decreasing = TRUE), ]
largest_22 <- head(mf_22_sorted_desc[,wanted_cols], 3)
# Combination
smallest_SR_100 <- rbind(smallest_12,smallest_14,smallest_16,
                     smallest_18,smallest_20,smallest_22)
largest_SR_100 <- rbind(largest_12,largest_14,largest_16,largest_18,
                     largest_20,largest_22)
combined_SR_100 <- cbind(largest_SR_100, smallest_SR_100[,c("PROV","SR_100")])
combined_SR_100

### Time series
tenerife <- c(
  mf_12[mf_12$PROV == "Tenerife", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Tenerife", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Tenerife", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Tenerife", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Tenerife", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Tenerife", "SR_100"][[1]]
)
alava <- c(
  mf_12[mf_12$PROV == "Alava", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Alava", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Alava", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Alava", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Alava", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Alava", "SR_100"][[1]]
)
gipuzkoa <- c(
  mf_12[mf_12$PROV == "Gipuzkoa", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Gipuzkoa", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Gipuzkoa", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Gipuzkoa", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Gipuzkoa", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Gipuzkoa", "SR_100"][[1]]
)
melilla <- c(
  mf_12[mf_12$PROV == "Melilla", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Melilla", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Melilla", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Melilla", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Melilla", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Melilla", "SR_100"][[1]]
)
bizkaia <- c(
  mf_12[mf_12$PROV == "Bizkaia", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Bizkaia", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Bizkaia", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Bizkaia", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Bizkaia", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Bizkaia", "SR_100"][[1]]
)
valladolid <- c(
  mf_12[mf_12$PROV == "Valladolid", "SR_100"][[1]],
  mf_14[mf_14$PROV == "Valladolid", "SR_100"][[1]],
  mf_16[mf_16$PROV == "Valladolid", "SR_100"][[1]],
  mf_18[mf_18$PROV == "Valladolid", "SR_100"][[1]],
  mf_20[mf_20$PROV == "Valladolid", "SR_100"][[1]],
  mf_22[mf_22$PROV == "Valladolid", "SR_100"][[1]]
)
data_short <- data.frame(
  Year = c(2012, 2014, 2016, 2018, 2020, 2022),
  Tenerife = tenerife,
  Alava = alava,
  Bizkaia = bizkaia,
  Melilla = melilla,
  Gipuzkoa = gipuzkoa,
  Valladolid = valladolid
)
# TIME SERIES
data_long <- gather(data_short, key = "Province", value = "LocationIndex", -Year)
ggplot(data_long, aes(x = Year, y = LocationIndex, color = Province, group = Province)) +
  geom_line(linewidth = 1) +
  geom_point(linewidth = 2) +
  scale_x_continuous(
    breaks = c(2012, 2014, 2016, 2018, 2020, 2022)
  ) +
  labs(title = NULL,
       x = "Year",
       y = "SR (>100)",
       color = "Province") +
  theme_minimal()+
  theme(
    legend.text = element_text(size = 18),  
    legend.title = element_text(size = 18)    
  )

#########################################################################
# CLUSTERIZATION ALGORITHM
#########################################################################

# Longevity metric

longevity_dist <- function(IL, IL2, IL3, SR_65, SR_85, SR_100, i) {
  distance <- 0
  variables <- list(IL, IL2, IL3, SR_65, SR_85, SR_100)
  for (var in variables) {
    if (!is.nan(var[i])) {
      distance <- distance + (var - var[i])^2
    }
  }
  # Return the square root of the sum of squared differences
  return(sqrt(distance))
}

# Clusterization Function

stdbscan <- function(x, y, time, eps, eps2, eps3, minpts, 
                             IL, IL2, IL3,SR_65,SR_85,SR_100) { 
  n <- length(x)
  
  # Initialize vectors for clusters, class density, and core points
  cv <- integer(n)
  isseed <- logical(n)
  cn <- 0
  
  for (i in 1:n) {
    if (cv[i] == 0) {
      # Calculate the distances
      spatial_distance <- sqrt((x - x[i])^2 + (y - y[i])^2)
      time_distance <- abs(time - time[i])
      longevity_distance <- longevity_dist(IL,IL2,IL3,SR_65,SR_85,SR_100,i)
 
      reachables <- which(spatial_distance <= eps & 
                      time_distance <= eps2 &
                      longevity_distance <= eps3)
      
      if (length(reachables) < minpts) {
        cv[i] <- -1  # Mark as noise
      } else {
        cn <- cn + 1
        cv[i] <- cn
        isseed[i] <- TRUE
        reachables <- setdiff(reachables, i)
        while (length(reachables)) {
          cv[reachables] <- cn
          new_reachables <- integer()
          for (j in reachables) {
            jspatial_distance <- sqrt((x - x[j])^2 + (y - y[j])^2)
            jtime_distance <- abs(time - time[j])
            jlongevity_distance <- longevity_dist(IL,IL2,IL3,SR_65,SR_85,SR_100,j)
            
            jreachables <- which(jspatial_distance <= eps & 
                       jtime_distance <= eps2 &
                       jlongevity_distance <= eps3)
            
            if (length(jreachables) >= minpts) {
              isseed[j] <- TRUE
              cv[jreachables[cv[jreachables] < 0]] <- cn
              new_reachables <- c(new_reachables, jreachables[cv[jreachables] == 0])
            }
          }
          reachables <- unique(new_reachables)
        }
      }
    }
  }
  
  if (any(cv == -1)) {
    cv[cv == -1] <- 0
  }
  
  out <- list(cluster = cv, eps = eps, eps2=eps2, eps3=eps3, minpts = minpts)
  if (cn > 0) {
    out$isseed <- isseed
  }
  class(out) <- "stdbscan"
  return(out)
}

# Create an appropriate dataframe with the features that we need
munic <- data %>%
  group_by(PROV, MUNICIPIO, year) %>%
  summarize(total = sum(Total_habs),
            older_65 = sum(Total_65),
            older_85 = sum(Total_85),
            older_100 = sum(Total_100),
            olderm_65 = sum(Totalm_65),
            olderf_65 = sum(Totalf_65),
            olderm_85 = sum(Totalm_85),
            olderf_85 = sum(Totalf_85),
            olderm_100 = sum(m_100),
            olderf_100 = sum(f_100),
            Coord_X = mean(Coord_X_ce),
            Coord_Y = mean(Coord_Y_ce))
# Compute IL for every year
# Total centenarians and inhabitants for each year
total_C12 <- sum(munic$older_100[munic$year == 2012])
total12 <- sum(munic$total[munic$year == 2012])
total_C14 <- sum(munic$older_100[munic$year == 2014])
total14 <- sum(munic$total[munic$year == 2014])
total_C16 <- sum(munic$older_100[munic$year == 2016])
total16 <- sum(munic$total[munic$year == 2016])
total_C18 <- sum(munic$older_100[munic$year == 2018])
total18 <- sum(munic$total[munic$year == 2018])
total_C20 <- sum(munic$older_100[munic$year == 2020])
total20 <- sum(munic$total[munic$year == 2020])
total_C22 <- sum(munic$older_100[munic$year == 2022])
total22 <- sum(munic$total[munic$year == 2022])

# Create the new column IL with NA values to fill in later
munic$IL <- NA

# Apply the formula for each year
munic$IL[munic$year == 2012] <- (munic$older_100[munic$year == 2012] / total_C12) / (munic$total[munic$year == 2012] / total12)

munic$IL[munic$year == 2014] <- (munic$older_100[munic$year == 2014] / total_C14) / (munic$total[munic$year == 2014] / total14)

munic$IL[munic$year == 2016] <- (munic$older_100[munic$year == 2016] / total_C16) / (munic$total[munic$year == 2016] / total16)

munic$IL[munic$year == 2018] <- (munic$older_100[munic$year == 2018] / total_C18) / (munic$total[munic$year == 2018] / total18)

munic$IL[munic$year == 2020] <- (munic$older_100[munic$year == 2020] / total_C20) / (munic$total[munic$year == 2020] / total20)

munic$IL[munic$year == 2022] <- (munic$older_100[munic$year == 2022] / total_C22) / (munic$total[munic$year == 2022] / total22)


# Compute IL(>65) for every year
total_S12 <- sum(munic$older_65[munic$year == 2012])
total_S14 <- sum(munic$older_65[munic$year == 2014])
total_S16 <- sum(munic$older_65[munic$year == 2016])
total_S18 <- sum(munic$older_65[munic$year == 2018])
total_S20 <- sum(munic$older_65[munic$year == 2020])
total_S22 <- sum(munic$older_65[munic$year == 2022])

munic$IL2 <- NA
munic$IL2[munic$year == 2012] <- (munic$older_100[munic$year == 2012] / total_C12) / (munic$older_65[munic$year == 2012] / total_S12)

munic$IL2[munic$year == 2014] <- (munic$older_100[munic$year == 2014] / total_C14) / (munic$older_65[munic$year == 2014] / total_S14)

munic$IL2[munic$year == 2016] <- (munic$older_100[munic$year == 2016] / total_C16) / (munic$older_65[munic$year == 2016] / total_S16)

munic$IL2[munic$year == 2018] <- (munic$older_100[munic$year == 2018] / total_C18) / (munic$older_65[munic$year == 2018] / total_S18)

munic$IL2[munic$year == 2020] <- (munic$older_100[munic$year == 2020] / total_C20) / (munic$older_65[munic$year == 2020] / total_S20)

munic$IL2[munic$year == 2022] <- (munic$older_100[munic$year == 2022] / total_C22) / (munic$older_65[munic$year == 2022] / total_S22)

# Compute IL(>85) for every year
total_O12 <- sum(munic$older_85[munic$year == 2012])
total_O14 <- sum(munic$older_85[munic$year == 2014])
total_O16 <- sum(munic$older_85[munic$year == 2016])
total_O18 <- sum(munic$older_85[munic$year == 2018])
total_O20 <- sum(munic$older_85[munic$year == 2020])
total_O22 <- sum(munic$older_85[munic$year == 2022])

munic$IL3 <- NA

munic$IL3[munic$year == 2012] <- (munic$older_100[munic$year == 2012]/total_C12)/(munic$older_85[munic$year == 2012]/total_O12)

munic$IL3[munic$year == 2014] <- (munic$older_100[munic$year == 2014] / total_C14) / (munic$older_85[munic$year == 2014] / total_O14)

munic$IL3[munic$year == 2016] <- (munic$older_100[munic$year == 2016] / total_C16) / (munic$older_85[munic$year == 2016] / total_O16)

munic$IL3[munic$year == 2018] <- (munic$older_100[munic$year == 2018] / total_C18) / (munic$older_85[munic$year == 2018] / total_O18)

munic$IL3[munic$year == 2020] <- (munic$older_100[munic$year == 2020] / total_C20) / (munic$older_85[munic$year == 2020] / total_O20)

munic$IL3[munic$year == 2022] <- (munic$older_100[munic$year == 2022] / total_C22) / (munic$older_85[munic$year == 2022] / total_O22)

# Compute SR(>65)
munic$SR_65 <- munic$olderm_65/munic$olderf_65*100
# Compute SR(>85)
munic$SR_85 <- munic$olderm_85/munic$olderf_85*100
# Compute SR(>100)
munic$SR_100 <- munic$olderm_100/munic$olderf_100*100

x <- munic$Coord_X
y <- munic$Coord_Y
time <- munic$year
IL <- munic$IL
IL2 <- munic$IL2
IL3 <- munic$IL3
SR_65 <- munic$SR_65
SR_85 <- munic$SR_85
SR_100 <- munic$SR_100

### Spatial tuning


eps <- 2.5  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result1 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result1$cluster)

eps <- 2  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result2 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result2$cluster)

eps <- 1.5  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result3 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result3$cluster)

eps <- 1  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result4 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result4$cluster)

eps <- 0.5  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result5 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result5$cluster)

eps <- 2.25  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result6 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result6$cluster)

eps <- 2.75  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result7 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result7$cluster)

eps <- 3  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result8 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result8$cluster)

eps <- 3.25  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result9 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result9$cluster)

eps <- 3.5  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result10 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result10$cluster)

eps <- 3.75  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result11 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result11$cluster)

eps <- 4  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result12 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result12$cluster)

eps <- 5  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result13 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result13$cluster)

eps <- 6  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result14 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result14$cluster)

eps <- 7  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result15 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result15$cluster)

eps <- 8  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result16 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result16$cluster)

eps <- 9  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result17 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result17$cluster)

eps <- 10  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result18 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result18$cluster)

eps <- 1e4  # spatial
eps2 <- 2   # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result19 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result19$cluster)

parameters <- data.frame(
  Eps = c(2.5,2,1.5,1,0.5,2.25,2.75,3,3.25,3.5,3.75,4,5,6,7,8,9,10,1e4),
  Eps2 = c(rep(2,19)),
  Eps3 = c(rep(10,19)),
  Minpts = c(rep(100,19))
)
zeros <- c(
  sum(result1$cluster==0),
  sum(result2$cluster==0),
  sum(result3$cluster==0),
  sum(result4$cluster==0),
  sum(result5$cluster==0),
  sum(result6$cluster==0),
  sum(result7$cluster==0),
  sum(result8$cluster==0),
  sum(result9$cluster==0),
  sum(result10$cluster==0),
  sum(result11$cluster==0),
  sum(result12$cluster==0),
  sum(result13$cluster==0),
  sum(result14$cluster==0),
  sum(result15$cluster==0),
  sum(result16$cluster==0),
  sum(result17$cluster==0),
  sum(result18$cluster==0),
  sum(result19$cluster==0)
)
ones <- c(
  sum(result1$cluster==1),
  sum(result2$cluster==1),
  sum(result3$cluster==1),
  sum(result4$cluster==1),
  sum(result5$cluster==1),
  sum(result6$cluster==1),
  sum(result7$cluster==1),
  sum(result8$cluster==1),
  sum(result9$cluster==1),
  sum(result10$cluster==1),
  sum(result11$cluster==1),
  sum(result12$cluster==1),
  sum(result13$cluster==1),
  sum(result14$cluster==1),
  sum(result15$cluster==1),
  sum(result16$cluster==1),
  sum(result17$cluster==1),
  sum(result18$cluster==1),
  sum(result19$cluster==1)
)
twos <- c(
  sum(result1$cluster==2),
  sum(result2$cluster==2),
  sum(result3$cluster==2),
  sum(result4$cluster==2),
  sum(result5$cluster==2),
  sum(result6$cluster==2),
  sum(result7$cluster==2),
  sum(result8$cluster==2),
  sum(result9$cluster==2),
  sum(result10$cluster==2),
  sum(result11$cluster==2),
  sum(result12$cluster==2),
  sum(result13$cluster==2),
  sum(result14$cluster==2),
  sum(result15$cluster==2),
  sum(result16$cluster==2),
  sum(result17$cluster==2),
  sum(result18$cluster==2),
  sum(result19$cluster==2)
)
threes <- c(
  sum(result1$cluster==3),
  sum(result2$cluster==3),
  sum(result3$cluster==3),
  sum(result4$cluster==3),
  sum(result5$cluster==3),
  sum(result6$cluster==3),
  sum(result7$cluster==3),
  sum(result8$cluster==3),
  sum(result9$cluster==3),
  sum(result10$cluster==3),
  sum(result11$cluster==3),
  sum(result12$cluster==3),
  sum(result13$cluster==3),
  sum(result14$cluster==3),
  sum(result15$cluster==3),
  sum(result16$cluster==3),
  sum(result17$cluster==3),
  sum(result18$cluster==3),
  sum(result19$cluster==3)
)
fours <- c(
  sum(result1$cluster==4),
  sum(result2$cluster==4),
  sum(result3$cluster==4),
  sum(result4$cluster==4),
  sum(result5$cluster==4),
  sum(result6$cluster==4),
  sum(result7$cluster==4),
  sum(result8$cluster==4),
  sum(result9$cluster==4),
  sum(result10$cluster==4),
  sum(result11$cluster==4),
  sum(result12$cluster==4),
  sum(result13$cluster==4),
  sum(result14$cluster==4),
  sum(result15$cluster==4),
  sum(result16$cluster==4),
  sum(result17$cluster==4),
  sum(result18$cluster==4),
  sum(result19$cluster==4)
)
fives <- c(
  sum(result1$cluster==5),
  sum(result2$cluster==5),
  sum(result3$cluster==5),
  sum(result4$cluster==5),
  sum(result5$cluster==5),
  sum(result6$cluster==5),
  sum(result7$cluster==5),
  sum(result8$cluster==5),
  sum(result9$cluster==5),
  sum(result10$cluster==5),
  sum(result11$cluster==5),
  sum(result12$cluster==5),
  sum(result13$cluster==5),
  sum(result14$cluster==5),
  sum(result15$cluster==5),
  sum(result16$cluster==5),
  sum(result17$cluster==5),
  sum(result18$cluster==5),
  sum(result19$cluster==5)
)
clusters <- c(
  length(unique(result1$cluster)),
  length(unique(result2$cluster)),
  length(unique(result3$cluster)),
  length(unique(result4$cluster)),
  length(unique(result5$cluster)),
  length(unique(result6$cluster)),
  length(unique(result7$cluster)),
  length(unique(result8$cluster)),
  length(unique(result9$cluster)),
  length(unique(result10$cluster)),
  length(unique(result11$cluster)),
  length(unique(result12$cluster)),
  length(unique(result13$cluster)),
  length(unique(result14$cluster)),
  length(unique(result15$cluster)),
  length(unique(result16$cluster)),
  length(unique(result17$cluster)),
  length(unique(result18$cluster)),
  length(unique(result19$cluster))+1  # There is no 0
)
total_muns <- length(munic$MUNICIPIO)
spatial_tuning <- data.frame(
  "Perc. 0s" = round(zeros/total_muns*100,2),
  "Perc. 1s" = round(ones/total_muns*100,2),
  "Perc. 2s" = round(twos/total_muns*100,2),
  "Perc. 3s" = round(threes/total_muns*100,2),
  "Perc. 4s" = round(fours/total_muns*100,2),
  "Perc. 5s" = round(fives/total_muns*100,2),
  N.clusters = clusters-1
)
# Create a new column in my_dataframe containing the parameter vectors
spatial_tuning$Parameters <- apply(parameters, 1, function(x) list(as.numeric(x)))

# Convert the column into a list of vectors
spatial_tuning$Parameters <- do.call(rbind, spatial_tuning$Parameters)

# Sort the dataframe by the first component of the 'Parameters' column
spatial_tuning <- spatial_tuning[order(sapply(spatial_tuning$Parameters, function(x) x[1])), ]
print(spatial_tuning)

# Spatial coordinates visualization
plot(x,y, asp = 1, xlim=c(-20,6))
axis(1, at = seq(-20, 6, by = 2))
axis(2, at = seq(26, 44, by = 2))
vertical_lines <- seq(-18, 4, by = 2)
for (v in vertical_lines) {
  abline(v = v, col = "grey", lty = 2)
}
horizontal_lines <- seq(28, 42, by = 2)
for (h in horizontal_lines) {
  abline(h = h, col = "grey", lty = 2)
}
# Draw circles with specified radii (ratios)
origin <- c(-4, 40)
radii <- c(2, 3.5, 4, 5)
colors <- c("red", "purple", "green", "blue")
line_width <- 2

for (i in 1:length(radii)) {
  symbols(origin[1], origin[2], circles = radii[i], add = TRUE, inches = FALSE, bg = NA, fg = colors[i], lwd = line_width)
}

# Add cross at the origin
cross_length <- 0.5  # Length of the cross arms
segments(x0 = origin[1] - cross_length, y0 = origin[2], 
         x1 = origin[1] + cross_length, y1 = origin[2], col = "red", lwd = 2)
segments(x0 = origin[1], y0 = origin[2] - cross_length, 
         x1 = origin[1], y1 = origin[2] + cross_length, col = "red", lwd = 2)

# Add legend
legend("topleft", legend = c(expression(epsilon == 2), expression(epsilon == 3.5), expression(epsilon == 4), expression(epsilon == 5)), 
       col = colors, lty = 1, bty = "n")



### Temporal tuning
```{r}
eps <- 3.5  # spatial
eps2 <- 0  # temporal
eps3 <- 10 # longevity
minpts <- 100 # Minimum number of points

result20 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result20$cluster)

eps2 <- 4  # temporal

result21 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result21$cluster)

eps2 <- 6  # temporal

result22 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result22$cluster)

eps2 <- 8  # temporal

result23 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result23$cluster)

eps2 <- 1e2  # temporal

result24 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result24$cluster)

parameters <- data.frame(
  Eps = c(rep(3.5,6)),
  Eps2 = c(2,0,4,6,8,1e2),
  Eps3 = c(rep(10,6)),
  Minpts = c(rep(100,6))
)
zeros <- c(
  sum(result10$cluster==0),
  sum(result20$cluster==0),
  sum(result21$cluster==0),
  sum(result22$cluster==0),
  sum(result23$cluster==0),
  sum(result24$cluster==0)
)
ones <- c(
  sum(result10$cluster==1),
  sum(result20$cluster==1),
  sum(result21$cluster==1),
  sum(result22$cluster==1),
  sum(result23$cluster==1),
  sum(result24$cluster==1)
)
twos <- c(
  sum(result10$cluster==2),
  sum(result20$cluster==2),
  sum(result21$cluster==2),
  sum(result22$cluster==2),
  sum(result23$cluster==2),
  sum(result24$cluster==2)
)
threes <- c(
  sum(result10$cluster==3),
  sum(result20$cluster==3),
  sum(result21$cluster==3),
  sum(result22$cluster==3),
  sum(result23$cluster==3),
  sum(result24$cluster==3)
)
fours <- c(
  sum(result10$cluster==4),
  sum(result20$cluster==4),
  sum(result21$cluster==4),
  sum(result22$cluster==4),
  sum(result23$cluster==4),
  sum(result24$cluster==4)
)
fives <- c(
  sum(result10$cluster==5),
  sum(result20$cluster==5),
  sum(result21$cluster==5),
  sum(result22$cluster==5),
  sum(result23$cluster==5),
  sum(result24$cluster==5)
)
clusters <- c(
  length(unique(result10$cluster)),
  length(unique(result20$cluster)),
  length(unique(result21$cluster)),
  length(unique(result22$cluster)),
  length(unique(result23$cluster)),
  length(unique(result24$cluster))
)
total_muns <- length(munic$MUNICIPIO)
temporal_tuning <- data.frame(
  "% 0s" = round(zeros/total_muns*100,2),
  "% 1s" = round(ones/total_muns*100,2),
  "% 2s" = round(twos/total_muns*100,2),
  "% 3s" = round(threes/total_muns*100,2),
  "% 4s" = round(fours/total_muns*100,2),
  "% 5s" = round(fives/total_muns*100,2),
  N.clusters = clusters-1
)
# Create a new column in my_dataframe containing the parameter vectors
temporal_tuning$Parameters <- apply(parameters, 1, function(x) list(as.numeric(x)))

# Convert the column into a list of vectors
temporal_tuning$Parameters <- do.call(rbind, temporal_tuning$Parameters)

# Sort the dataframe by the second components of the 'Parameters' column
temporal_tuning <- temporal_tuning[order(sapply(temporal_tuning$Parameters, function(x) x[2])), ]
print(temporal_tuning)

### Longevity tuning

eps <- 3.5  # spatial
eps2 <- 2  # temporal
eps3 <- 0.5 # longevity
minpts <- 100 # Minimum number of points

result25 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result25$cluster)

eps3 <- 1 # longevity

result26 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result26$cluster)

eps3 <- 2 # longevity

result27 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result27$cluster)

eps3 <- 3 # longevity

result28 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result28$cluster)

eps3 <- 4 # longevity

result29 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result29$cluster)

eps3 <- 5 # longevity

result30 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result30$cluster)

eps3 <- 6 # longevity

result31 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result31$cluster)

eps3 <- 7 # longevity

result32 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result32$cluster)

eps3 <- 8 # longevity

result33 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result33$cluster)

eps3 <- 9 # longevity

result34 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result34$cluster)

eps3 <- 11 # longevity

result35 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result35$cluster)

eps3 <- 12 # longevity

result36 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result36$cluster)

eps3 <- 13 # longevity

result37 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result37$cluster)

eps3 <- 15 # longevity

result38 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result38$cluster)

eps3 <- 17 # longevity

result39 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result39$cluster)

eps3 <- 19 # longevity

result40 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result40$cluster)

eps3 <- 22 # longevity

result41 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result41$cluster)

eps3 <- 25 # longevity

result42 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result42$cluster)

eps3 <- 30 # longevity

result43 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result43$cluster)

eps3 <- 1e5 # longevity

result44 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result44$cluster)

parameters <- data.frame(
  Eps = c(rep(3.5,21)),
  Eps2 = c(rep(2,21)),
  Eps3 = c(10,0.5,1,2,3,4,5,6,7,8,9,11,12,13,15,17,19,22,25,30,1e5),
  Minpts = c(rep(100,21))
)
zeros <- c(
  sum(result10$cluster==0),
  sum(result25$cluster==0),
  sum(result26$cluster==0),
  sum(result27$cluster==0),
  sum(result28$cluster==0),
  sum(result29$cluster==0),
  sum(result30$cluster==0),
  sum(result31$cluster==0),
  sum(result32$cluster==0),
  sum(result33$cluster==0),
  sum(result34$cluster==0),
  sum(result35$cluster==0),
  sum(result36$cluster==0),
  sum(result37$cluster==0),
  sum(result38$cluster==0),
  sum(result39$cluster==0),
  sum(result40$cluster==0),
  sum(result41$cluster==0),
  sum(result42$cluster==0),
  sum(result43$cluster==0),
  sum(result44$cluster==0)
)
ones <- c(
  sum(result10$cluster==1),
  sum(result25$cluster==1),
  sum(result26$cluster==1),
  sum(result27$cluster==1),
  sum(result28$cluster==1),
  sum(result29$cluster==1),
  sum(result30$cluster==1),
  sum(result31$cluster==1),
  sum(result32$cluster==1),
  sum(result33$cluster==1),
  sum(result34$cluster==1),
  sum(result35$cluster==1),
  sum(result36$cluster==1),
  sum(result37$cluster==1),
  sum(result38$cluster==1),
  sum(result39$cluster==1),
  sum(result40$cluster==1),
  sum(result41$cluster==1),
  sum(result42$cluster==1),
  sum(result43$cluster==1),
  sum(result44$cluster==1)
)
twos <- c(
  sum(result10$cluster==2),
  sum(result25$cluster==2),
  sum(result26$cluster==2),
  sum(result27$cluster==2),
  sum(result28$cluster==2),
  sum(result29$cluster==2),
  sum(result30$cluster==2),
  sum(result31$cluster==2),
  sum(result32$cluster==2),
  sum(result33$cluster==2),
  sum(result34$cluster==2),
  sum(result35$cluster==2),
  sum(result36$cluster==2),
  sum(result37$cluster==2),
  sum(result38$cluster==2),
  sum(result39$cluster==2),
  sum(result40$cluster==2),
  sum(result41$cluster==2),
  sum(result42$cluster==2),
  sum(result43$cluster==2),
  sum(result44$cluster==2)
)
threes <- c(
  sum(result10$cluster==3),
  sum(result25$cluster==3),
  sum(result26$cluster==3),
  sum(result27$cluster==3),
  sum(result28$cluster==3),
  sum(result29$cluster==3),
  sum(result30$cluster==3),
  sum(result31$cluster==3),
  sum(result32$cluster==3),
  sum(result33$cluster==3),
  sum(result34$cluster==3),
  sum(result35$cluster==3),
  sum(result36$cluster==3),
  sum(result37$cluster==3),
  sum(result38$cluster==3),
  sum(result39$cluster==3),
  sum(result40$cluster==3),
  sum(result41$cluster==3),
  sum(result42$cluster==3),
  sum(result43$cluster==3),
  sum(result44$cluster==3)
)
fours <- c(
  sum(result10$cluster==4),
  sum(result25$cluster==4),
  sum(result26$cluster==4),
  sum(result27$cluster==4),
  sum(result28$cluster==4),
  sum(result29$cluster==4),
  sum(result30$cluster==4),
  sum(result31$cluster==4),
  sum(result32$cluster==4),
  sum(result33$cluster==4),
  sum(result34$cluster==4),
  sum(result35$cluster==4),
  sum(result36$cluster==4),
  sum(result37$cluster==4),
  sum(result38$cluster==4),
  sum(result39$cluster==4),
  sum(result40$cluster==4),
  sum(result41$cluster==4),
  sum(result42$cluster==4),
  sum(result43$cluster==4),
  sum(result44$cluster==4)
)
fives <- c(
  sum(result10$cluster==5),
  sum(result25$cluster==5),
  sum(result26$cluster==5),
  sum(result27$cluster==5),
  sum(result28$cluster==5),
  sum(result29$cluster==5),
  sum(result30$cluster==5),
  sum(result31$cluster==5),
  sum(result32$cluster==5),
  sum(result33$cluster==5),
  sum(result34$cluster==5),
  sum(result35$cluster==5),
  sum(result36$cluster==5),
  sum(result37$cluster==5),
  sum(result38$cluster==5),
  sum(result39$cluster==5),
  sum(result40$cluster==5),
  sum(result41$cluster==5),
  sum(result42$cluster==5),
  sum(result43$cluster==5),
  sum(result44$cluster==5)
)
clusters <- c(
  length(unique(result10$cluster)),
  length(unique(result25$cluster)),
  length(unique(result26$cluster)),
  length(unique(result27$cluster)),
  length(unique(result28$cluster)),
  length(unique(result29$cluster)),
  length(unique(result30$cluster)),
  length(unique(result31$cluster)),
  length(unique(result32$cluster)),
  length(unique(result33$cluster)),
  length(unique(result34$cluster)),
  length(unique(result35$cluster)),
  length(unique(result36$cluster)),
  length(unique(result37$cluster)),
  length(unique(result38$cluster)),
  length(unique(result39$cluster)),
  length(unique(result40$cluster)),
  length(unique(result41$cluster)),
  length(unique(result42$cluster)),
  length(unique(result43$cluster)),
  length(unique(result44$cluster))
)
total_muns <- length(munic$MUNICIPIO)
longevity_tuning <- data.frame(
  "% 0s" = round(zeros/total_muns*100,2),
  "% 1s" = round(ones/total_muns*100,2),
  "% 2s" = round(twos/total_muns*100,2),
  "% 3s" = round(threes/total_muns*100,2),
  "% 4s" = round(fours/total_muns*100,2),
  "% 5s" = round(fives/total_muns*100,2),
  N.clusters = clusters-1
)
# Create a new column in my_dataframe containing the parameter vectors
longevity_tuning$Parameters <- apply(parameters, 1, function(x) list(as.numeric(x)))

# Convert the column into a list of vectors
longevity_tuning$Parameters <- do.call(rbind, longevity_tuning$Parameters)

# Sort the dataframe by the third component of the 'Parameters' column
longevity_tuning <- longevity_tuning[order(sapply(longevity_tuning$Parameters, function(x) x[3])), ]
print(longevity_tuning)

### Minpts parameter tuning
eps <- 3.5  # spatial
eps2 <- 2  # temporal
eps3 <- 12 # longevity
minpts <- 15 # Minimum number of points

result45 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result45$cluster)

minpts <- 25 # Minimum number of points

result46 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result46$cluster)

minpts <- 50 # Minimum number of points

result47 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result47$cluster)

minpts <- 75 # Minimum number of points

result48 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result48$cluster)

minpts <- 150 # Minimum number of points

result49 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result49$cluster)

minpts <- 200 # Minimum number of points

result50 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result50$cluster)

minpts <- 300 # Minimum number of points

result51 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result51$cluster)

minpts <- 400 # Minimum number of points

result52 <- stdbscan(x,y,time,eps,eps2,eps3,minpts,IL,IL2,IL3,SR_65,SR_85,SR_100)
unique(result52$cluster)

parameters <- data.frame(
  Eps = c(rep(3.5,9)),
  Eps2 = c(rep(2,9)),
  Eps3 = c(rep(12,9)),
  Minpts = c(100,15,25,50,75,150,200,300,400)
)
zeros <- c(
  sum(result36$cluster==0),
  sum(result45$cluster==0),
  sum(result46$cluster==0),
  sum(result47$cluster==0),
  sum(result48$cluster==0),
  sum(result49$cluster==0),
  sum(result50$cluster==0),
  sum(result51$cluster==0),
  sum(result52$cluster==0)
)
ones <- c(
  sum(result36$cluster==1),
  sum(result45$cluster==1),
  sum(result46$cluster==1),
  sum(result47$cluster==1),
  sum(result48$cluster==1),
  sum(result49$cluster==1),
  sum(result50$cluster==1),
  sum(result51$cluster==1),
  sum(result52$cluster==1)
)
twos <- c(
  sum(result36$cluster==2),
  sum(result45$cluster==2),
  sum(result46$cluster==2),
  sum(result47$cluster==2),
  sum(result48$cluster==2),
  sum(result49$cluster==2),
  sum(result50$cluster==2),
  sum(result51$cluster==2),
  sum(result52$cluster==2)
)
threes <- c(
  sum(result36$cluster==3),
  sum(result45$cluster==3),
  sum(result46$cluster==3),
  sum(result47$cluster==3),
  sum(result48$cluster==3),
  sum(result49$cluster==3),
  sum(result50$cluster==3),
  sum(result51$cluster==3),
  sum(result52$cluster==3)
)
fours <- c(
  sum(result36$cluster==4),
  sum(result45$cluster==4),
  sum(result46$cluster==4),
  sum(result47$cluster==4),
  sum(result48$cluster==4),
  sum(result49$cluster==4),
  sum(result50$cluster==4),
  sum(result51$cluster==4),
  sum(result52$cluster==4)
)
fives <- c(
  sum(result36$cluster==5),
  sum(result45$cluster==5),
  sum(result46$cluster==5),
  sum(result47$cluster==5),
  sum(result48$cluster==5),
  sum(result49$cluster==5),
  sum(result50$cluster==5),
  sum(result51$cluster==5),
  sum(result52$cluster==5)
)
clusters <- c(
  length(unique(result36$cluster)),
  length(unique(result45$cluster)),
  length(unique(result46$cluster)),
  length(unique(result47$cluster)),
  length(unique(result48$cluster)),
  length(unique(result49$cluster)),
  length(unique(result50$cluster)),
  length(unique(result51$cluster)),
  length(unique(result52$cluster))
)
total_muns <- length(munic$MUNICIPIO)
minpts_tuning <- data.frame(
  "% 0s" = round(zeros/total_muns*100,2),
  "% 1s" = round(ones/total_muns*100,2),
  "% 2s" = round(twos/total_muns*100,2),
  "% 3s" = round(threes/total_muns*100,2),
  "% 4s" = round(fours/total_muns*100,2),
  "% 5s" = round(fives/total_muns*100,2),
  N.clusters = clusters-1
)
# Create a new column in my_dataframe containing the parameter vectors
minpts_tuning$Parameters <- apply(parameters, 1, function(x) list(as.numeric(x)))

# Convert the column into a list of vectors
minpts_tuning$Parameters <- do.call(rbind, minpts_tuning$Parameters)

# Sort the dataframe by the fourth component of the 'Parameters' column
minpts_tuning <- minpts_tuning[order(sapply(minpts_tuning$Parameters, function(x) x[4])), ]
print(minpts_tuning)

#### Visualization

munic$cluster <- result47$cluster
cluster_12 <- munic[munic$year==2012,]
cluster_14 <- munic[munic$year==2014,]
cluster_16 <- munic[munic$year==2016,]
cluster_18 <- munic[munic$year==2018,]
cluster_20 <- munic[munic$year==2020,]
cluster_22 <- munic[munic$year==2022,]


cluster_12$MUNICIPIO <- as.character(cluster_12$MUNICIPIO)
cluster_12$PROV <- as.character(cluster_12$PROV)

munics_12$cluster <- NULL
munics_12 <- munics_12 %>%
  left_join(cluster_12[,c("PROV","MUNICIPIO","cluster")], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))
plot_12_47<-ggplot(munics_12) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2012"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

cluster_14$MUNICIPIO <- as.character(cluster_14$MUNICIPIO)
cluster_14$PROV <- as.character(cluster_14$PROV)

munics_14$cluster <- NULL
munics_14 <- munics_14 %>%
  left_join(cluster_14[,c("PROV","MUNICIPIO","cluster")], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))


plot_14_47<-ggplot(munics_14) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2014"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

cluster_16$MUNICIPIO <- as.character(cluster_16$MUNICIPIO)
cluster_16$PROV <- as.character(cluster_16$PROV)

munics_16$cluster <- NULL
munics_16 <- munics_16 %>%
  left_join(cluster_16[,c("PROV","MUNICIPIO","cluster")], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))


plot_16_47<-ggplot(munics_16) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2016"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

cluster_18$MUNICIPIO <- as.character(cluster_18$MUNICIPIO)
cluster_18$PROV <- as.character(cluster_18$PROV)

munics_18$cluster <- NULL
munics_18 <- munics_18 %>%
  left_join(cluster_18[,c("PROV","MUNICIPIO","cluster")], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))


plot_18_47<-ggplot(munics_18) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2018"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

cluster_20$MUNICIPIO <- as.character(cluster_20$MUNICIPIO)
cluster_20$PROV <- as.character(cluster_20$PROV)

munics_20$cluster <- NULL
munics_20 <- munics_20 %>%
  left_join(cluster_20["PROV","MUNICIPIO","cluster"], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))


plot_20_47<-ggplot(munics_20) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2020"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

cluster_22$MUNICIPIO <- as.character(cluster_22$MUNICIPIO)
cluster_22$PROV <- as.character(cluster_22$PROV)

munics_22$cluster <- NULL
munics_22 <- munics_22 %>%
  left_join(cluster_22["PROV","MUNICIPIO","cluster"], by = c("ine.prov.name"="PROV", "name"="MUNICIPIO"))


plot_22_47<-ggplot(munics_22) +
  geom_sf(aes(fill = factor(cluster)), alpha = 0.9, color = NA) +
  scale_fill_manual(values = c("0" = "#1f78b4",  # Blue
                               "1" = "#33a02c",  # Green
                               "2" = "#e31a1c",  # Red
                               "3" = "#ff7f00",  # Orange
                               "4" = "#6a3d9a",  # Purple
                               "5" = "#b15928")) +  # Brown
  labs(
    fill = "cluster",
    title = "2022"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "grey80"),
    text = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

# Combine all plots
grid.arrange(plot_12_47, plot_14_47, plot_16_47, plot_18_47, plot_20_47, plot_22_47, nrow = 3, ncol = 2, 
             widths = unit(c(8,8), "cm"),
             heights = unit(c(5, 5, 5), "cm"))

